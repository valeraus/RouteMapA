{"ast":null,"code":"import { GoogleMap } from '@angular/google-maps'; //import { MapTrackService } from '../../../shared/services/map.track.service'\n\nimport { map, Observable } from 'rxjs';\nimport { StylesMap } from './map.style';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/google-maps\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"mapSearch\"];\nconst _c1 = [\"mapSearch2\"];\n\nfunction MapTrackComponent_map_marker_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"map-marker\", 13);\n  }\n\n  if (rf & 2) {\n    const marker_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"options\", marker_r4);\n  }\n}\n\nfunction MapTrackComponent_map_directions_renderer_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"map-directions-renderer\", 14);\n  }\n\n  if (rf & 2) {\n    const directionsResults_r5 = ctx.ngIf;\n    i0.ɵɵproperty(\"directions\", directionsResults_r5);\n  }\n}\n\nexport class MapTrackComponent {\n  constructor(mapDirectionsService) {\n    this.mapDirectionsService = mapDirectionsService;\n    this.letter = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    this.searchField = null;\n    this.searchField2 = null;\n    this.map = null;\n    this.style = {\n      pointerEvents: \"none\",\n      opacity: \"0\"\n    };\n    this.show = false;\n    this.cordinateOrigin = null;\n    this.cordinateDestination = null;\n    this.options = {\n      disableDefaultUI: true,\n      styles: StylesMap.dark\n    };\n    this.center = {\n      lat: 48.8588548,\n      lng: 2.347035\n    };\n    this.zoom = 15;\n    this.markers = [//{\n      //  position: { lat: 48.8584, lng: 2.2945 },\n      //  animation: google.maps.Animation.DROP,\n      //  label: \"123\",\n      //},\n      // { lat: 48.8584, lng: 2.2945 }, // Eiffel Tower\n      //{ lat: 48.8606, lng: 2.3376 }, // Louvre Museum\n      // { lat: 48.8530, lng: 2.3499 }, // Cathédrale Notre-Dame de Paris\n    ];\n    navigator.geolocation.getCurrentPosition(position => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n    });\n    this.directionsResults$ = new Observable();\n  } //markerPositions: google.maps.LatLngLiteral[] = [];\n\n\n  addMarker(event) {\n    if (event.latLng != null) this.markers.push({\n      position: event.latLng.toJSON(),\n      animation: google.maps.Animation.DROP,\n      label: {\n        text: this.letter[this.markers.length],\n        color: \"#fff\",\n        fontWeight: \"900\",\n        fontSize: \"40px\",\n        fontFamily: \"Century Gothic\"\n      }\n    });\n  }\n\n  buildRoute() {\n    if (this.cordinateOrigin != null && this.cordinateDestination != null) {\n      const request = {\n        origin: this.cordinateOrigin.getCenter(),\n        destination: this.cordinateDestination.getCenter(),\n        travelMode: google.maps.TravelMode.DRIVING\n      };\n      this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n    }\n  }\n\n  buildRoadByPoint() {\n    if (this.markers.length > 1) {\n      let waypoints = [];\n\n      for (var i = 1; i < this.markers.length - 1; i++) {\n        waypoints.push({\n          location: this.markers[i].position,\n          stopover: true\n        });\n      }\n\n      const request = {\n        origin: this.markers[0].position,\n        destination: this.markers[this.markers.length - 1].position,\n        waypoints: waypoints,\n        travelMode: google.maps.TravelMode.DRIVING,\n        optimizeWaypoints: true\n      };\n      this.markers = [];\n      this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n      console.log(this.mapDirectionsService.route.length);\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.searchField != null && this.searchField2 != null) {\n      let change1 = this.InitSearchInput(this.searchField);\n      let change2 = this.InitSearchInput(this.searchField2);\n      change1.subscribe(value => {\n        this.cordinateOrigin = value;\n        this.buildRoute();\n      });\n      change2.subscribe(value => {\n        this.cordinateDestination = value;\n        this.buildRoute();\n      });\n    }\n  }\n\n  InitSearchInput(el) {\n    let informator = new Observable(observ => {\n      const SearchBox = new google.maps.places.SearchBox(el.nativeElement);\n      SearchBox.addListener('places_changed', () => {\n        const places = SearchBox.getPlaces();\n\n        if ((places === null || places === void 0 ? void 0 : places.length) === 0) {\n          return;\n        }\n\n        const bounds = new google.maps.LatLngBounds();\n        places === null || places === void 0 ? void 0 : places.forEach(place => {\n          if (!place.geometry || !place.geometry.location) {\n            return;\n          }\n\n          if (place.geometry.viewport) {\n            bounds.union(place.geometry.viewport);\n          } else {\n            bounds.extend(place.geometry.location);\n          }\n        });\n        observ.next(bounds);\n      });\n    });\n    return informator;\n  }\n\n  MenuShow() {\n    this.show = !this.show;\n    let clone = Object.assign({}, this.style);\n\n    if (this.show) {\n      clone.opacity = \"0.9\";\n      clone.pointerEvents = \"auto\";\n    } else {\n      clone.opacity = \"0\";\n      clone.pointerEvents = \"none\";\n    }\n\n    this.style = clone;\n  }\n\n  Set() {\n    let marker = {\n      title: \"321\",\n      position: {\n        lat: 48.9584,\n        lng: 2.3945\n      },\n      animation: google.maps.Animation.BOUNCE,\n      collisionBehavior: \"2s\",\n      cursor: \"crosshair\",\n      opacity: 0.5,\n      label: {\n        text: \"123\",\n        color: \"#fff\",\n        fontWeight: \"900\",\n        fontSize: \"40px\"\n      }\n    };\n    this.markers.push(marker); //let clone = { ...(this.center)};\n    //clone.lat += 1;\n    //this.center = clone;\n  }\n\n}\n\nMapTrackComponent.ɵfac = function MapTrackComponent_Factory(t) {\n  return new (t || MapTrackComponent)(i0.ɵɵdirectiveInject(i1.MapDirectionsService));\n};\n\nMapTrackComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapTrackComponent,\n  selectors: [[\"app-map-track\"]],\n  viewQuery: function MapTrackComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(GoogleMap, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchField = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchField2 = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.map = _t.first);\n    }\n  },\n  decls: 17,\n  vars: 9,\n  consts: [[1, \"simple-container\"], [1, \"map\"], [1, \"menu-top\", \"rounded\"], [1, \"btn\", \"btn-primary\", \"rounded\", 3, \"click\"], [1, \"menu\", \"rounded\"], [1, \"menu-content\"], [\"placeholder\", \"0809\", 1, \"form-control\", \"rounded\"], [\"mapSearch\", \"\"], [1, \"form-control\", \"rounded\"], [\"mapSearch2\", \"\"], [\"height\", \"100vh\", \"width\", \"100%\", 3, \"options\", \"center\", \"zoom\", \"mapClick\"], [3, \"options\", 4, \"ngFor\", \"ngForOf\"], [3, \"directions\", 4, \"ngIf\"], [3, \"options\"], [3, \"directions\"]],\n  template: function MapTrackComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function MapTrackComponent_Template_button_click_3_listener() {\n        return ctx.MenuShow();\n      });\n      i0.ɵɵtext(4, \"\\u041F\\u0440\\u043E\\u043A\\u043B\\u0430\\u0441\\u0442\\u0438 \\u043C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function MapTrackComponent_Template_button_click_5_listener() {\n        return ctx.buildRoadByPoint();\n      });\n      i0.ɵɵtext(6, \"\\u041F\\u043E\\u0431\\u0443\\u0434\\u0443\\u0432\\u0430\\u0442\\u0438 \\u043F\\u043E \\u0442\\u043E\\u0447\\u043A\\u0430\\u043C\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5);\n      i0.ɵɵelement(9, \"input\", 6, 7)(11, \"input\", 8, 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"google-map\", 10);\n      i0.ɵɵlistener(\"mapClick\", function MapTrackComponent_Template_google_map_mapClick_13_listener($event) {\n        return ctx.addMarker($event);\n      });\n      i0.ɵɵtemplate(14, MapTrackComponent_map_marker_14_Template, 1, 1, \"map-marker\", 11);\n      i0.ɵɵtemplate(15, MapTrackComponent_map_directions_renderer_15_Template, 1, 1, \"map-directions-renderer\", 12);\n      i0.ɵɵpipe(16, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵstyleMap(ctx.style);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"options\", ctx.options)(\"center\", ctx.center)(\"zoom\", ctx.zoom);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.markers);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(16, 7, ctx.directionsResults$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i1.GoogleMap, i1.MapDirectionsRenderer, i1.MapMarker, i2.AsyncPipe],\n  styles: [\".rounded[_ngcontent-%COMP%] {\\r\\n  border-radius: 15px;\\r\\n}\\r\\n\\r\\n.menu-top[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  background-color: #e7f3ff;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.menu-top[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n    margin: 0 10px;\\r\\n  }\\r\\n\\r\\n.menu[_ngcontent-%COMP%] {\\r\\n  width: 30vw;\\r\\n  height: 30vh;\\r\\n  position: fixed;\\r\\n  background-color: #e7f3ff;\\r\\n  border: 1px solid #ccc;\\r\\n  top: calc(50vh - 15vh);\\r\\n  left: calc(50vw - 15vw);\\r\\n  z-index: 10;\\r\\n  pointer-events: none;\\r\\n  opacity: 0;\\r\\n  transition: 0.3s;\\r\\n}\\r\\n\\r\\n.menu-content[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  padding: 70px 0px;\\r\\n}\\r\\n\\r\\n.menu-content[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n    width: calc(80% - 20px);\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n  background-color: blue;\\r\\n  color: white;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcC10cmFjay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2Qix5QkFBeUI7RUFDekIsYUFBYTtBQUNmOztBQUVFO0lBQ0UsY0FBYztFQUNoQjs7QUFFRjtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUNmLHlCQUF5QjtFQUN6QixzQkFBc0I7RUFDdEIsc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixXQUFXO0VBQ1gsb0JBQW9CO0VBQ3BCLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixpQkFBaUI7QUFDbkI7O0FBRUU7SUFDRSx1QkFBdUI7SUFDdkIsbUJBQW1CO0VBQ3JCOztBQUVGO0VBQ0Usc0JBQXNCO0VBQ3RCLFlBQVk7QUFDZCIsImZpbGUiOiJtYXAtdHJhY2suY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3VuZGVkIHtcclxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG59XHJcblxyXG4ubWVudS10b3Age1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZjNmZjtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4gIC5tZW51LXRvcCBidXR0b24ge1xyXG4gICAgbWFyZ2luOiAwIDEwcHg7XHJcbiAgfVxyXG5cclxuLm1lbnUge1xyXG4gIHdpZHRoOiAzMHZ3O1xyXG4gIGhlaWdodDogMzB2aDtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZjNmZjtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIHRvcDogY2FsYyg1MHZoIC0gMTV2aCk7XHJcbiAgbGVmdDogY2FsYyg1MHZ3IC0gMTV2dyk7XHJcbiAgei1pbmRleDogMTA7XHJcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgb3BhY2l0eTogMDtcclxuICB0cmFuc2l0aW9uOiAwLjNzO1xyXG59XHJcblxyXG4ubWVudS1jb250ZW50IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBwYWRkaW5nOiA3MHB4IDBweDtcclxufVxyXG5cclxuICAubWVudS1jb250ZW50IGlucHV0IHtcclxuICAgIHdpZHRoOiBjYWxjKDgwJSAtIDIwcHgpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcblxyXG4uYnRuIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["GoogleMap","map","Observable","StylesMap","i0","MapTrackComponent","constructor","mapDirectionsService","pointerEvents","opacity","disableDefaultUI","styles","dark","lat","lng","navigator","geolocation","getCurrentPosition","position","center","coords","latitude","longitude","console","log","directionsResults$","addMarker","event","latLng","markers","push","toJSON","animation","google","maps","Animation","DROP","label","text","letter","length","color","fontWeight","fontSize","fontFamily","buildRoute","cordinateOrigin","cordinateDestination","request","origin","getCenter","destination","travelMode","TravelMode","DRIVING","route","pipe","response","result","buildRoadByPoint","waypoints","i","location","stopover","optimizeWaypoints","ngAfterViewInit","searchField","searchField2","change1","InitSearchInput","change2","subscribe","value","el","informator","observ","SearchBox","places","nativeElement","addListener","getPlaces","bounds","LatLngBounds","forEach","place","geometry","viewport","union","extend","next","MenuShow","show","clone","style","Set","marker","title","BOUNCE","collisionBehavior","cursor","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\PROJECTS\\Angular\\Project1\\Project1\\ClientApp\\src\\app\\map-track\\map-track.component.ts","D:\\PROJECTS\\Angular\\Project1\\Project1\\ClientApp\\src\\app\\map-track\\map-track.component.html"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MapInfoWindow, MapMarker, MapDirectionsService, GoogleMap } from '@angular/google-maps';\r\n//import { MapTrackService } from '../../../shared/services/map.track.service'\r\nimport { map, Observable } from 'rxjs';\r\nimport { StylesMap } from './map.style';\r\n\r\n\r\n@Component({\r\n  selector: 'app-map-track',\r\n  templateUrl: './map-track.component.html',\r\n  styleUrls: ['./map-track.component.css']\r\n})\r\n\r\nexport class MapTrackComponent implements AfterViewInit {\r\n  letter: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  @ViewChild(\"mapSearch\") searchField: ElementRef | null = null;\r\n  @ViewChild(\"mapSearch2\") searchField2: ElementRef | null = null;\r\n  @ViewChild(GoogleMap) map: GoogleMap | null = null;\r\n  style = {\r\n    pointerEvents: \"none\",\r\n    opacity: \"0\",\r\n  }\r\n  show = false;\r\n  cordinateOrigin: google.maps.LatLngBounds | null = null;\r\n  cordinateDestination: google.maps.LatLngBounds | null = null;\r\n\r\n  options: google.maps.MapOptions = {\r\n    disableDefaultUI: true,\r\n    styles: StylesMap.dark,\r\n  };\r\n\r\n  center: google.maps.LatLngLiteral = { lat: 48.8588548, lng: 2.347035 };\r\n  zoom = 15;\r\n\r\n  markers: google.maps.MarkerOptions[] = [\r\n    //{\r\n    //  position: { lat: 48.8584, lng: 2.2945 },\r\n    //  animation: google.maps.Animation.DROP,\r\n    //  label: \"123\",\r\n\r\n    //},\r\n    // { lat: 48.8584, lng: 2.2945 }, // Eiffel Tower\r\n    //{ lat: 48.8606, lng: 2.3376 }, // Louvre Museum\r\n    // { lat: 48.8530, lng: 2.3499 }, // Cathédrale Notre-Dame de Paris\r\n  ];\r\n  //markerPositions: google.maps.LatLngLiteral[] = [];\r\n\r\n  addMarker(event: google.maps.MapMouseEvent) {\r\n    if (event.latLng != null) this.markers.push({\r\n      position: event.latLng.toJSON(),\r\n      animation: google.maps.Animation.DROP,\r\n      label: {\r\n        text: this.letter[this.markers.length],\r\n        color: \"#fff\",\r\n        fontWeight: \"900\",\r\n        fontSize: \"40px\",\r\n        fontFamily: \"Century Gothic\"\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  directionsResults$: Observable<google.maps.DirectionsResult | undefined>;\r\n  constructor(private mapDirectionsService: MapDirectionsService) {\r\n\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.center = { lat: position.coords.latitude, lng : position.coords.longitude }\r\n      console.log(position.coords.latitude);\r\n      console.log(position.coords.longitude);\r\n    })\r\n\r\n\r\n    this.directionsResults$ = new Observable();\r\n  }\r\n\r\n  buildRoute() {\r\n    if (this.cordinateOrigin != null && this.cordinateDestination != null) {\r\n      const request: google.maps.DirectionsRequest = {\r\n        origin: this.cordinateOrigin.getCenter(),\r\n        destination: this.cordinateDestination.getCenter(),\r\n        travelMode: google.maps.TravelMode.DRIVING\r\n      };\r\n      this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\r\n    }\r\n  }\r\n\r\n  buildRoadByPoint() {\r\n    if (this.markers.length > 1) {\r\n      let waypoints: google.maps.DirectionsWaypoint[] = [];\r\n      for (var i = 1; i < this.markers.length - 1; i++) {\r\n        waypoints.push({\r\n          location: this.markers[i].position as google.maps.LatLngLiteral,\r\n          stopover: true\r\n        })\r\n      }\r\n\r\n      const request: google.maps.DirectionsRequest = {\r\n        origin: this.markers[0].position as google.maps.LatLngLiteral,\r\n        destination: this.markers[this.markers.length - 1].position as google.maps.LatLngLiteral,\r\n        waypoints: waypoints,\r\n        travelMode: google.maps.TravelMode.DRIVING,\r\n        optimizeWaypoints: true\r\n      };\r\n      this.markers = [];\r\n      this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\r\n      console.log(this.mapDirectionsService.route.length);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.searchField != null && this.searchField2 != null) {\r\n      let change1 = this.InitSearchInput(this.searchField);\r\n      let change2 = this.InitSearchInput(this.searchField2);\r\n\r\n      change1.subscribe(value => {\r\n        this.cordinateOrigin = value;\r\n        this.buildRoute();\r\n      })\r\n      change2.subscribe(value => {\r\n        this.cordinateDestination = value;\r\n        this.buildRoute();\r\n      })\r\n    }\r\n  }\r\n\r\n  InitSearchInput(el: ElementRef) {\r\n    let informator = new Observable<google.maps.LatLngBounds>(observ => {\r\n      const SearchBox = new google.maps.places.SearchBox(\r\n        el.nativeElement,\r\n      );\r\n\r\n      SearchBox.addListener('places_changed', () => {\r\n        const places = SearchBox.getPlaces();\r\n\r\n        if (places?.length === 0) {\r\n          return\r\n        }\r\n        const bounds = new google.maps.LatLngBounds();\r\n        places?.forEach(place => {\r\n          if (!place.geometry || !place.geometry.location) {\r\n            return;\r\n          }\r\n          if (place.geometry.viewport) {\r\n            bounds.union(place.geometry.viewport);\r\n          }\r\n          else {\r\n            bounds.extend(place.geometry.location);\r\n          }\r\n        });\r\n        observ.next(bounds)\r\n      })\r\n    });\r\n    return informator;\r\n  }\r\n\r\n  MenuShow() {\r\n    this.show = !this.show;\r\n    let clone = { ...(this.style) };\r\n    if (this.show) {\r\n      clone.opacity = \"0.9\";\r\n      clone.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n      clone.opacity = \"0\";\r\n      clone.pointerEvents = \"none\";\r\n    }\r\n    this.style = clone;\r\n  }\r\n\r\n\r\n  Set(): void {\r\n\r\n    let marker: google.maps.MarkerOptions =\r\n    {\r\n      title: \"321\",\r\n      position: { lat: 48.9584, lng: 2.3945 },\r\n      animation: google.maps.Animation.BOUNCE,\r\n      collisionBehavior: \"2s\",\r\n      cursor: \"crosshair\",\r\n      opacity: 0.5,\r\n      label: {\r\n        text: \"123\",\r\n        color: \"#fff\",\r\n        fontWeight: \"900\",\r\n        fontSize: \"40px\"\r\n      },\r\n\r\n    }\r\n\r\n    this.markers.push(marker);\r\n\r\n    //let clone = { ...(this.center)};\r\n    //clone.lat += 1;\r\n    //this.center = clone;\r\n  };\r\n}\r\n","<div class=\"simple-container\">\r\n  <div class=\"map\">\r\n    <div class=\"menu-top rounded\">\r\n      <button (click)=\"MenuShow()\" class=\"btn btn-primary rounded\">Прокласти маршрут</button>\r\n      <button (click)=\"buildRoadByPoint()\" class=\"btn btn-primary rounded\">Побудувати по точкам</button>\r\n    </div>\r\n\r\n    <div [style]=\"style\" class=\"menu rounded\">\r\n      <div class=\"menu-content\">\r\n        <input #mapSearch class=\"form-control rounded\" placeholder=\"0809\"/>\r\n        <input #mapSearch2 class=\"form-control rounded\" />\r\n      </div>\r\n    </div>\r\n\r\n    <google-map height=\"100vh\"\r\n                width=\"100%\"\r\n                [options]=\"options\"\r\n                [center]=\"center\"\r\n                [zoom]=\"zoom\"\r\n                (mapClick)=\"addMarker($event)\">\r\n      <map-marker *ngFor=\"let marker of markers\"\r\n                  [options]=\"marker\"></map-marker>\r\n      <map-directions-renderer *ngIf=\"(directionsResults$ | async) as directionsResults\"\r\n                               [directions]=\"directionsResults\"></map-directions-renderer>\r\n    </google-map>\r\n    <!--<button (click)=\"Set()\" class=\"btn btn-primary rounded\">Coordinate change</button>-->\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}