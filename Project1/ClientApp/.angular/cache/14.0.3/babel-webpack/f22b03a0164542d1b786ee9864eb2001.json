{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\n\nconst _c0 = [\"*\"];\n\nclass MapEventManager {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    /** Pending listeners that were added before the target was set. */\n\n    this._pending = [];\n    this._listeners = [];\n    this._targetStream = new BehaviorSubject(undefined);\n  }\n  /** Clears all currently-registered event listeners. */\n\n\n  _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n\n    this._listeners = [];\n  }\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n\n\n  getLazyEmitter(name) {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({\n            observable,\n            observer\n          });\n\n          return undefined;\n        }\n\n        const listener = target.addListener(name, event => {\n          this._ngZone.run(() => observer.next(event));\n        });\n\n        this._listeners.push(listener);\n\n        return () => listener.remove();\n      });\n      return observable;\n    }));\n  }\n  /** Sets the current target that the manager should bind events to. */\n\n\n  setTarget(target) {\n    const currentTarget = this._targetStream.value;\n\n    if (target === currentTarget) {\n      return;\n    } // Clear the listeners from the pre-existing target.\n\n\n    if (currentTarget) {\n      this._clearListeners();\n\n      this._pending = [];\n    }\n\n    this._targetStream.next(target); // Add the listeners that were bound before the map was initialized.\n\n\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n\n    this._pending = [];\n  }\n  /** Destroys the manager and clears the event listeners. */\n\n\n  destroy() {\n    this._clearListeners();\n\n    this._pending = [];\n\n    this._targetStream.complete();\n  }\n\n} /// <reference types=\"google.maps\" />\n\n/** default options set to the Googleplex */\n\n\nconst DEFAULT_OPTIONS = {\n  center: {\n    lat: 37.421995,\n    lng: -122.084092\n  },\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap'\n};\n/** Arbitrary default height for the map element */\n\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\n\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n\nclass GoogleMap {\n  constructor(_elementRef, _ngZone, platformId) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n\n    this.height = DEFAULT_HEIGHT;\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n\n    this.width = DEFAULT_WIDTH;\n    this._options = DEFAULT_OPTIONS;\n    /** Event emitted when the map is initialized. */\n\n    this.mapInitialized = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n     */\n\n    this.authFailure = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n     */\n\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n     */\n\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n     */\n\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n     */\n\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n     */\n\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n     */\n\n    this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n     */\n\n    this.idle = this._eventManager.getLazyEmitter('idle');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n     */\n\n    this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n     */\n\n    this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n     */\n\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n     */\n\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n     */\n\n    this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n     */\n\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n     */\n\n    this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n     */\n\n    this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n     */\n\n    this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n    this._isBrowser = isPlatformBrowser(platformId);\n\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace google not found, cannot construct embedded google ' + 'map. Please install the Google Maps JavaScript API: ' + 'https://developers.google.com/maps/documentation/javascript/' + 'tutorial#Loading_the_Maps_API');\n      }\n\n      this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n\n      googleMapsWindow.gm_authFailure = () => {\n        if (this._existingAuthFailureCallback) {\n          this._existingAuthFailureCallback();\n        }\n\n        this.authFailure.emit();\n      };\n    }\n  }\n\n  set center(center) {\n    this._center = center;\n  }\n\n  set zoom(zoom) {\n    this._zoom = zoom;\n  }\n\n  set options(options) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n\n    const googleMap = this.googleMap;\n\n    if (googleMap) {\n      if (changes['options']) {\n        googleMap.setOptions(this._combineOptions());\n      }\n\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      } // Note that the zoom can be zero.\n\n\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n\n      this._setSize(); // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n      });\n\n      this._eventManager.setTarget(this.googleMap);\n\n      this.mapInitialized.emit(this.googleMap);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n      googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n    }\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n\n\n  fitBounds(bounds, padding) {\n    this._assertInitialized();\n\n    this.googleMap.fitBounds(bounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n\n\n  panBy(x, y) {\n    this._assertInitialized();\n\n    this.googleMap.panBy(x, y);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n\n\n  panTo(latLng) {\n    this._assertInitialized();\n\n    this.googleMap.panTo(latLng);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n\n\n  panToBounds(latLngBounds, padding) {\n    this._assertInitialized();\n\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n\n\n  getBounds() {\n    this._assertInitialized();\n\n    return this.googleMap.getBounds() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n\n\n  getCenter() {\n    this._assertInitialized();\n\n    return this.googleMap.getCenter();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n\n\n  getClickableIcons() {\n    this._assertInitialized();\n\n    return this.googleMap.getClickableIcons();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n\n\n  getHeading() {\n    this._assertInitialized();\n\n    return this.googleMap.getHeading();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n\n\n  getMapTypeId() {\n    this._assertInitialized();\n\n    return this.googleMap.getMapTypeId();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n\n\n  getProjection() {\n    this._assertInitialized();\n\n    return this.googleMap.getProjection() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n\n\n  getStreetView() {\n    this._assertInitialized();\n\n    return this.googleMap.getStreetView();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n\n\n  getTilt() {\n    this._assertInitialized();\n\n    return this.googleMap.getTilt();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n\n\n  getZoom() {\n    this._assertInitialized();\n\n    return this.googleMap.getZoom();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n\n\n  get controls() {\n    this._assertInitialized();\n\n    return this.googleMap.controls;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n\n\n  get data() {\n    this._assertInitialized();\n\n    return this.googleMap.data;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n\n\n  get mapTypes() {\n    this._assertInitialized();\n\n    return this.googleMap.mapTypes;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n\n\n  get overlayMapTypes() {\n    this._assertInitialized();\n\n    return this.googleMap.overlayMapTypes;\n  }\n\n  _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height = this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n      styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n    }\n  }\n  /** Combines the center and zoom and the other map options into a single object */\n\n\n  _combineOptions() {\n    var _a, _b;\n\n    const options = this._options || {};\n    return Object.assign(Object.assign({}, options), {\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: (_b = (_a = this._zoom) !== null && _a !== void 0 ? _a : options.zoom) !== null && _b !== void 0 ? _b : DEFAULT_OPTIONS.zoom,\n      // Passing in an undefined `mapTypeId` seems to break tile loading\n      // so make sure that we have some kind of default (see #22082).\n      mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId\n    });\n  }\n  /** Asserts that the map has been initialized. */\n\n\n  _assertInitialized() {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n\n}\n\nGoogleMap.ɵfac = function GoogleMap_Factory(t) {\n  return new (t || GoogleMap)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nGoogleMap.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GoogleMap,\n  selectors: [[\"google-map\"]],\n  inputs: {\n    height: \"height\",\n    width: \"width\",\n    mapTypeId: \"mapTypeId\",\n    center: \"center\",\n    zoom: \"zoom\",\n    options: \"options\"\n  },\n  outputs: {\n    mapInitialized: \"mapInitialized\",\n    authFailure: \"authFailure\",\n    boundsChanged: \"boundsChanged\",\n    centerChanged: \"centerChanged\",\n    mapClick: \"mapClick\",\n    mapDblclick: \"mapDblclick\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    mapDragstart: \"mapDragstart\",\n    headingChanged: \"headingChanged\",\n    idle: \"idle\",\n    maptypeidChanged: \"maptypeidChanged\",\n    mapMousemove: \"mapMousemove\",\n    mapMouseout: \"mapMouseout\",\n    mapMouseover: \"mapMouseover\",\n    projectionChanged: \"projectionChanged\",\n    mapRightclick: \"mapRightclick\",\n    tilesloaded: \"tilesloaded\",\n    tiltChanged: \"tiltChanged\",\n    zoomChanged: \"zoomChanged\"\n  },\n  exportAs: [\"googleMap\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"map-container\"]],\n  template: function GoogleMap_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMap, [{\n    type: Component,\n    args: [{\n      selector: 'google-map',\n      exportAs: 'googleMap',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    mapInitialized: [{\n      type: Output\n    }],\n    authFailure: [{\n      type: Output\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    headingChanged: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    maptypeidChanged: [{\n      type: Output\n    }],\n    mapMousemove: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    projectionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    tilesloaded: [{\n      type: Output\n    }],\n    tiltChanged: [{\n      type: Output\n    }],\n    zoomChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\n\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n} /// <reference types=\"google.maps\" />\n\n\nclass MapBaseLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n\n      this._assertInitialized();\n\n      this._setMap();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n\n  _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n\n  _initializeObject() {}\n\n  _setMap() {}\n\n  _unsetMap() {}\n\n}\n\nMapBaseLayer.ɵfac = function MapBaseLayer_Factory(t) {\n  return new (t || MapBaseLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapBaseLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapBaseLayer,\n  selectors: [[\"map-base-layer\"]],\n  exportAs: [\"mapBaseLayer\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBaseLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-base-layer',\n      exportAs: 'mapBaseLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\n\n\nclass MapBicyclingLayer extends MapBaseLayer {\n  _initializeObject() {\n    this.bicyclingLayer = new google.maps.BicyclingLayer();\n  }\n\n  _setMap() {\n    this._assertLayerInitialized();\n\n    this.bicyclingLayer.setMap(this._map.googleMap);\n  }\n\n  _unsetMap() {\n    if (this.bicyclingLayer) {\n      this.bicyclingLayer.setMap(null);\n    }\n  }\n\n  _assertLayerInitialized() {\n    if (!this.bicyclingLayer) {\n      throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n\n}\n\nMapBicyclingLayer.ɵfac = /* @__PURE__ */function () {\n  let ɵMapBicyclingLayer_BaseFactory;\n  return function MapBicyclingLayer_Factory(t) {\n    return (ɵMapBicyclingLayer_BaseFactory || (ɵMapBicyclingLayer_BaseFactory = i0.ɵɵgetInheritedFactory(MapBicyclingLayer)))(t || MapBicyclingLayer);\n  };\n}();\n\nMapBicyclingLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapBicyclingLayer,\n  selectors: [[\"map-bicycling-layer\"]],\n  exportAs: [\"mapBicyclingLayer\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-bicycling-layer',\n      exportAs: 'mapBicyclingLayer'\n    }]\n  }], null, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n\n\nclass MapCircle {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._center = new BehaviorSubject(undefined);\n    this._radius = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n     */\n\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n     */\n\n    this.circleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n     */\n\n    this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n     */\n\n    this.circleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n     */\n\n    this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n     */\n\n    this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n     */\n\n    this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n     */\n\n    this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n     */\n\n    this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n     */\n\n    this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n     */\n\n    this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n     */\n\n    this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n     */\n\n    this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set center(center) {\n    this._center.next(center);\n  }\n\n  set radius(radius) {\n    this._radius.next(radius);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.circle = new google.maps.Circle(options);\n        });\n\n        this._assertInitialized();\n\n        this.circle.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.circle);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForCenterChanges();\n\n      this._watchForRadiusChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n\n\n  getBounds() {\n    this._assertInitialized();\n\n    return this.circle.getBounds();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n\n\n  getCenter() {\n    this._assertInitialized();\n\n    return this.circle.getCenter();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return this.circle.getDraggable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n\n\n  getEditable() {\n    this._assertInitialized();\n\n    return this.circle.getEditable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n   */\n\n\n  getRadius() {\n    this._assertInitialized();\n\n    return this.circle.getRadius();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.circle.getVisible();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n      const combinedOptions = Object.assign(Object.assign({}, options), {\n        center: center || options.center,\n        radius: radius !== undefined ? radius : options.radius\n      });\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.circle.setOptions(options);\n    });\n  }\n\n  _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n\n        this.circle.setCenter(center);\n      }\n    });\n  }\n\n  _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.circle) {\n        throw Error('Cannot interact with a Google Map Circle before it has been ' + 'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapCircle.ɵfac = function MapCircle_Factory(t) {\n  return new (t || MapCircle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapCircle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapCircle,\n  selectors: [[\"map-circle\"]],\n  inputs: {\n    options: \"options\",\n    center: \"center\",\n    radius: \"radius\"\n  },\n  outputs: {\n    centerChanged: \"centerChanged\",\n    circleClick: \"circleClick\",\n    circleDblclick: \"circleDblclick\",\n    circleDrag: \"circleDrag\",\n    circleDragend: \"circleDragend\",\n    circleDragstart: \"circleDragstart\",\n    circleMousedown: \"circleMousedown\",\n    circleMousemove: \"circleMousemove\",\n    circleMouseout: \"circleMouseout\",\n    circleMouseover: \"circleMouseover\",\n    circleMouseup: \"circleMouseup\",\n    radiusChanged: \"radiusChanged\",\n    circleRightclick: \"circleRightclick\"\n  },\n  exportAs: [\"mapCircle\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-circle',\n      exportAs: 'mapCircle'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblclick: [{\n      type: Output\n    }],\n    circleDrag: [{\n      type: Output\n    }],\n    circleDragend: [{\n      type: Output\n    }],\n    circleDragstart: [{\n      type: Output\n    }],\n    circleMousedown: [{\n      type: Output\n    }],\n    circleMousemove: [{\n      type: Output\n    }],\n    circleMouseout: [{\n      type: Output\n    }],\n    circleMouseover: [{\n      type: Output\n    }],\n    circleMouseup: [{\n      type: Output\n    }],\n    radiusChanged: [{\n      type: Output\n    }],\n    circleRightclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\n\n\nclass MapDirectionsRenderer {\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.directions_changed\n     */\n\n    this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n\n\n  set directions(directions) {\n    this._directions = directions;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n\n\n  set options(options) {\n    this._options = options;\n  }\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n      });\n\n      this._assertInitialized();\n\n      this.directionsRenderer.setMap(this._googleMap.googleMap);\n\n      this._eventManager.setTarget(this.directionsRenderer);\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    if (this.directionsRenderer) {\n      this.directionsRenderer.setMap(null);\n    }\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n\n\n  getDirections() {\n    this._assertInitialized();\n\n    return this.directionsRenderer.getDirections();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n\n\n  getPanel() {\n    this._assertInitialized();\n\n    return this.directionsRenderer.getPanel();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n\n\n  getRouteIndex() {\n    this._assertInitialized();\n\n    return this.directionsRenderer.getRouteIndex();\n  }\n\n  _combineOptions() {\n    const options = this._options || {};\n    return Object.assign(Object.assign({}, options), {\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.directionsRenderer) {\n        throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' + 'initialized. Please wait for the Directions Renderer to load before trying ' + 'to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapDirectionsRenderer.ɵfac = function MapDirectionsRenderer_Factory(t) {\n  return new (t || MapDirectionsRenderer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapDirectionsRenderer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapDirectionsRenderer,\n  selectors: [[\"map-directions-renderer\"]],\n  inputs: {\n    directions: \"directions\",\n    options: \"options\"\n  },\n  outputs: {\n    directionsChanged: \"directionsChanged\"\n  },\n  exportAs: [\"mapDirectionsRenderer\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsRenderer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-directions-renderer',\n      exportAs: 'mapDirectionsRenderer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    directions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    directionsChanged: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n\n\nclass MapGroundOverlay {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._opacity = new BehaviorSubject(1);\n    this._url = new BehaviorSubject('');\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /** Whether the overlay is clickable */\n\n    this.clickable = false;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n  }\n  /** URL of the image that will be shown in the overlay. */\n\n\n  set url(url) {\n    this._url.next(url);\n  }\n  /** Bounds for the overlay. */\n\n\n  get bounds() {\n    return this._bounds.value;\n  }\n\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n  /** Opacity of the overlay. */\n\n\n  set opacity(opacity) {\n    this._opacity.next(opacity);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        } // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n\n\n        if (bounds) {\n          this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n              clickable: this.clickable,\n              opacity: this._opacity.value\n            });\n          });\n\n          this._assertInitialized();\n\n          this.groundOverlay.setMap(this._map.googleMap);\n\n          this._eventManager.setTarget(this.groundOverlay);\n        }\n      });\n\n      this._watchForOpacityChanges();\n\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n\n\n  getBounds() {\n    this._assertInitialized();\n\n    return this.groundOverlay.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n\n\n  getOpacity() {\n    this._assertInitialized();\n\n    return this.groundOverlay.getOpacity();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n\n\n  getUrl() {\n    this._assertInitialized();\n\n    return this.groundOverlay.getUrl();\n  }\n\n  _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this._assertInitialized();\n\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n\n      const overlay = this.groundOverlay;\n      overlay.set('url', url); // Google Maps only redraws the overlay if we re-set the map.\n\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap);\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.groundOverlay) {\n        throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' + 'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapGroundOverlay.ɵfac = function MapGroundOverlay_Factory(t) {\n  return new (t || MapGroundOverlay)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapGroundOverlay.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapGroundOverlay,\n  selectors: [[\"map-ground-overlay\"]],\n  inputs: {\n    url: \"url\",\n    bounds: \"bounds\",\n    clickable: \"clickable\",\n    opacity: \"opacity\"\n  },\n  outputs: {\n    mapClick: \"mapClick\",\n    mapDblclick: \"mapDblclick\"\n  },\n  exportAs: [\"mapGroundOverlay\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGroundOverlay, [{\n    type: Directive,\n    args: [{\n      selector: 'map-ground-overlay',\n      exportAs: 'mapGroundOverlay'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    url: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n\n\nclass MapInfoWindow {\n  constructor(_googleMap, _elementRef, _ngZone) {\n    this._googleMap = _googleMap;\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._position = new BehaviorSubject(undefined);\n    this._destroy = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n     */\n\n    this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.content_changed\n     */\n\n    this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n     */\n\n    this.domready = this._eventManager.getLazyEmitter('domready');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.position_changed\n     */\n\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.zindex_changed\n     */\n\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set position(position) {\n    this._position.next(position);\n  }\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n\n        this._eventManager.setTarget(this.infoWindow);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForPositionChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroy.next();\n\n    this._destroy.complete(); // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n\n\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n\n\n  close() {\n    this._assertInitialized();\n\n    this.infoWindow.close();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n\n\n  getContent() {\n    this._assertInitialized();\n\n    return this.infoWindow.getContent() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n\n\n  getPosition() {\n    this._assertInitialized();\n\n    return this.infoWindow.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n\n\n  getZIndex() {\n    this._assertInitialized();\n\n    return this.infoWindow.getZIndex();\n  }\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n\n\n  open(anchor, shouldFocus) {\n    this._assertInitialized();\n\n    const anchorObject = anchor ? anchor.getAnchor() : undefined; // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = ''; // The config is cast to `any`, because the internal typings are out of date.\n\n      this.infoWindow.open({\n        map: this._googleMap.googleMap,\n        anchor: anchorObject,\n        shouldFocus\n      });\n    }\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions = Object.assign(Object.assign({}, options), {\n        position: position || options.position,\n        content: this._elementRef.nativeElement\n      });\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n\n      this.infoWindow.setOptions(options);\n    });\n  }\n\n  _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.infoWindow) {\n        throw Error('Cannot interact with a Google Map Info Window before it has been ' + 'initialized. Please wait for the Info Window to load before trying to interact with ' + 'it.');\n      }\n    }\n  }\n\n}\n\nMapInfoWindow.ɵfac = function MapInfoWindow_Factory(t) {\n  return new (t || MapInfoWindow)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapInfoWindow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapInfoWindow,\n  selectors: [[\"map-info-window\"]],\n  hostAttrs: [2, \"display\", \"none\"],\n  inputs: {\n    options: \"options\",\n    position: \"position\"\n  },\n  outputs: {\n    closeclick: \"closeclick\",\n    contentChanged: \"contentChanged\",\n    domready: \"domready\",\n    positionChanged: \"positionChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  exportAs: [\"mapInfoWindow\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapInfoWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'map-info-window',\n      exportAs: 'mapInfoWindow',\n      host: {\n        'style': 'display: none'\n      }\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    closeclick: [{\n      type: Output\n    }],\n    contentChanged: [{\n      type: Output\n    }],\n    domready: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\n\n\nclass MapKmlLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._url = new BehaviorSubject('');\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n     */\n\n    this.kmlClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml\n     * #KmlLayer.defaultviewport_changed\n     */\n\n    this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n     */\n\n    this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set url(url) {\n    this._url.next(url);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.kmlLayer = new google.maps.KmlLayer(options));\n\n        this._assertInitialized();\n\n        this.kmlLayer.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.kmlLayer);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.kmlLayer) {\n      this.kmlLayer.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n\n\n  getDefaultViewport() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getDefaultViewport();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n\n\n  getMetadata() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getMetadata();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n\n\n  getStatus() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getStatus();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n\n\n  getUrl() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getUrl();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n\n\n  getZIndex() {\n    this._assertInitialized();\n\n    return this.kmlLayer.getZIndex();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions = Object.assign(Object.assign({}, options), {\n        url: url || options.url\n      });\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.kmlLayer) {\n        throw Error('Cannot interact with a Google Map KmlLayer before it has been ' + 'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapKmlLayer.ɵfac = function MapKmlLayer_Factory(t) {\n  return new (t || MapKmlLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapKmlLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapKmlLayer,\n  selectors: [[\"map-kml-layer\"]],\n  inputs: {\n    options: \"options\",\n    url: \"url\"\n  },\n  outputs: {\n    kmlClick: \"kmlClick\",\n    defaultviewportChanged: \"defaultviewportChanged\",\n    statusChanged: \"statusChanged\"\n  },\n  exportAs: [\"mapKmlLayer\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-kml-layer',\n      exportAs: 'mapKmlLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    kmlClick: [{\n      type: Output\n    }],\n    defaultviewportChanged: [{\n      type: Output\n    }],\n    statusChanged: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\n\n\nconst DEFAULT_MARKER_OPTIONS = {\n  position: {\n    lat: 37.421995,\n    lng: -122.084092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n\nclass MapMarker {\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n     */\n\n    this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n     */\n\n    this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n     */\n\n    this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n     */\n\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n     */\n\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n     */\n\n    this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n     */\n\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n     */\n\n    this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n     */\n\n    this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n     */\n\n    this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n     */\n\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n     */\n\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n     */\n\n    this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n     */\n\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n     */\n\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n     */\n\n    this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n     */\n\n    this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n     */\n\n    this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n     */\n\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n  }\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n\n\n  set title(title) {\n    this._title = title;\n  }\n  /**\n   * Position of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n\n\n  set position(position) {\n    this._position = position;\n  }\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n\n\n  set label(label) {\n    this._label = label;\n  }\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n\n\n  set clickable(clickable) {\n    this._clickable = clickable;\n  }\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n\n\n  set options(options) {\n    this._options = options;\n  }\n  /**\n   * Icon to be used for the marker.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n   */\n\n\n  set icon(icon) {\n    this._icon = icon;\n  }\n  /**\n   * Whether the marker is visible.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n   */\n\n\n  set visible(value) {\n    this._visible = value;\n  }\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.marker = new google.maps.Marker(this._combineOptions());\n      });\n\n      this._assertInitialized();\n\n      this.marker.setMap(this._googleMap.googleMap);\n\n      this._eventManager.setTarget(this.marker);\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      marker,\n      _title,\n      _position,\n      _label,\n      _clickable,\n      _icon,\n      _visible\n    } = this;\n\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n\n      if (changes['icon'] && _icon) {\n        marker.setIcon(_icon);\n      }\n\n      if (changes['visible'] && _visible !== undefined) {\n        marker.setVisible(_visible);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n\n\n  getAnimation() {\n    this._assertInitialized();\n\n    return this.marker.getAnimation() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n\n\n  getClickable() {\n    this._assertInitialized();\n\n    return this.marker.getClickable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n\n\n  getCursor() {\n    this._assertInitialized();\n\n    return this.marker.getCursor() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return !!this.marker.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n\n\n  getIcon() {\n    this._assertInitialized();\n\n    return this.marker.getIcon() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n\n\n  getLabel() {\n    this._assertInitialized();\n\n    return this.marker.getLabel() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n\n\n  getOpacity() {\n    this._assertInitialized();\n\n    return this.marker.getOpacity() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n\n\n  getPosition() {\n    this._assertInitialized();\n\n    return this.marker.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n\n\n  getShape() {\n    this._assertInitialized();\n\n    return this.marker.getShape() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n\n\n  getTitle() {\n    this._assertInitialized();\n\n    return this.marker.getTitle() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.marker.getVisible();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n\n\n  getZIndex() {\n    this._assertInitialized();\n\n    return this.marker.getZIndex() || null;\n  }\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n\n\n  getAnchor() {\n    this._assertInitialized();\n\n    return this.marker;\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n\n\n  _combineOptions() {\n    var _a, _b;\n\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return Object.assign(Object.assign({}, options), {\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: (_a = this._clickable) !== null && _a !== void 0 ? _a : options.clickable,\n      map: this._googleMap.googleMap,\n      icon: this._icon || options.icon,\n      visible: (_b = this._visible) !== null && _b !== void 0 ? _b : options.visible\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.marker) {\n        throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapMarker.ɵfac = function MapMarker_Factory(t) {\n  return new (t || MapMarker)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapMarker.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapMarker,\n  selectors: [[\"map-marker\"]],\n  inputs: {\n    title: \"title\",\n    position: \"position\",\n    label: \"label\",\n    clickable: \"clickable\",\n    options: \"options\",\n    icon: \"icon\",\n    visible: \"visible\"\n  },\n  outputs: {\n    animationChanged: \"animationChanged\",\n    mapClick: \"mapClick\",\n    clickableChanged: \"clickableChanged\",\n    cursorChanged: \"cursorChanged\",\n    mapDblclick: \"mapDblclick\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    draggableChanged: \"draggableChanged\",\n    mapDragstart: \"mapDragstart\",\n    flatChanged: \"flatChanged\",\n    iconChanged: \"iconChanged\",\n    mapMousedown: \"mapMousedown\",\n    mapMouseout: \"mapMouseout\",\n    mapMouseover: \"mapMouseover\",\n    mapMouseup: \"mapMouseup\",\n    positionChanged: \"positionChanged\",\n    mapRightclick: \"mapRightclick\",\n    shapeChanged: \"shapeChanged\",\n    titleChanged: \"titleChanged\",\n    visibleChanged: \"visibleChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  exportAs: [\"mapMarker\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'map-marker',\n      exportAs: 'mapMarker'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    animationChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    clickableChanged: [{\n      type: Output\n    }],\n    cursorChanged: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    draggableChanged: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    flatChanged: [{\n      type: Output\n    }],\n    iconChanged: [{\n      type: Output\n    }],\n    mapMousedown: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    mapMouseup: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    shapeChanged: [{\n      type: Output\n    }],\n    titleChanged: [{\n      type: Output\n    }],\n    visibleChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/** Default options for a clusterer. */\n\n\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\n\nclass MapMarkerClusterer {\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._currentMarkers = new Set();\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._destroy = new Subject();\n\n    this.ariaLabelFn = () => '';\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/\n     * _google_markerclustererplus.html#clusteringbegin\n     */\n\n\n    this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n     */\n\n    this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n    /** Emits when a cluster has been clicked. */\n\n    this.clusterClick = this._eventManager.getLazyEmitter('click');\n    this._canInitialize = this._googleMap._isBrowser;\n  }\n\n  set averageCenter(averageCenter) {\n    this._averageCenter = averageCenter;\n  }\n\n  set batchSizeIE(batchSizeIE) {\n    this._batchSizeIE = batchSizeIE;\n  }\n\n  set calculator(calculator) {\n    this._calculator = calculator;\n  }\n\n  set clusterClass(clusterClass) {\n    this._clusterClass = clusterClass;\n  }\n\n  set enableRetinaIcons(enableRetinaIcons) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n\n  set gridSize(gridSize) {\n    this._gridSize = gridSize;\n  }\n\n  set ignoreHidden(ignoreHidden) {\n    this._ignoreHidden = ignoreHidden;\n  }\n\n  set imageExtension(imageExtension) {\n    this._imageExtension = imageExtension;\n  }\n\n  set imagePath(imagePath) {\n    this._imagePath = imagePath;\n  }\n\n  set imageSizes(imageSizes) {\n    this._imageSizes = imageSizes;\n  }\n\n  set maxZoom(maxZoom) {\n    this._maxZoom = maxZoom;\n  }\n\n  set minimumClusterSize(minimumClusterSize) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n\n  set styles(styles) {\n    this._styles = styles;\n  }\n\n  set title(title) {\n    this._title = title;\n  }\n\n  set zIndex(zIndex) {\n    this._zIndex = zIndex;\n  }\n\n  set zoomOnClick(zoomOnClick) {\n    this._zoomOnClick = zoomOnClick;\n  }\n\n  set options(options) {\n    this._options = options;\n  }\n\n  ngOnInit() {\n    if (this._canInitialize) {\n      if (typeof MarkerClusterer !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' + 'Please install the MarkerClustererPlus library: ' + 'https://github.com/googlemaps/js-markerclustererplus');\n      } // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap, [], this._combineOptions());\n      });\n\n      this._assertInitialized();\n\n      this._eventManager.setTarget(this.markerClusterer);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      this._watchForMarkerChanges();\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      markerClusterer: clusterer,\n      ariaLabelFn,\n      _averageCenter,\n      _batchSizeIE,\n      _calculator,\n      _styles,\n      _clusterClass,\n      _enableRetinaIcons,\n      _gridSize,\n      _ignoreHidden,\n      _imageExtension,\n      _imagePath,\n      _imageSizes,\n      _maxZoom,\n      _minimumClusterSize,\n      _title,\n      _zIndex,\n      _zoomOnClick\n    } = this;\n\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n\n      if (changes['calculator'] && !!_calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n\n    this._destroy.complete();\n\n    this._eventManager.destroy();\n\n    if (this.markerClusterer) {\n      this.markerClusterer.setMap(null);\n    }\n  }\n\n  fitMapToMarkers(padding) {\n    this._assertInitialized();\n\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n\n  getAverageCenter() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getAverageCenter();\n  }\n\n  getBatchSizeIE() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getBatchSizeIE();\n  }\n\n  getCalculator() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getCalculator();\n  }\n\n  getClusterClass() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getClusterClass();\n  }\n\n  getClusters() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getClusters();\n  }\n\n  getEnableRetinaIcons() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n\n  getGridSize() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getGridSize();\n  }\n\n  getIgnoreHidden() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getIgnoreHidden();\n  }\n\n  getImageExtension() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getImageExtension();\n  }\n\n  getImagePath() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getImagePath();\n  }\n\n  getImageSizes() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getImageSizes();\n  }\n\n  getMaxZoom() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getMaxZoom();\n  }\n\n  getMinimumClusterSize() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n\n  getStyles() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getStyles();\n  }\n\n  getTitle() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getTitle();\n  }\n\n  getTotalClusters() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getTotalClusters();\n  }\n\n  getTotalMarkers() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getTotalMarkers();\n  }\n\n  getZIndex() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getZIndex();\n  }\n\n  getZoomOnClick() {\n    this._assertInitialized();\n\n    return this.markerClusterer.getZoomOnClick();\n  }\n\n  _combineOptions() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return Object.assign(Object.assign({}, options), {\n      ariaLabelFn: (_a = this.ariaLabelFn) !== null && _a !== void 0 ? _a : options.ariaLabelFn,\n      averageCenter: (_b = this._averageCenter) !== null && _b !== void 0 ? _b : options.averageCenter,\n      batchSize: (_c = this.batchSize) !== null && _c !== void 0 ? _c : options.batchSize,\n      batchSizeIE: (_d = this._batchSizeIE) !== null && _d !== void 0 ? _d : options.batchSizeIE,\n      calculator: (_e = this._calculator) !== null && _e !== void 0 ? _e : options.calculator,\n      clusterClass: (_f = this._clusterClass) !== null && _f !== void 0 ? _f : options.clusterClass,\n      enableRetinaIcons: (_g = this._enableRetinaIcons) !== null && _g !== void 0 ? _g : options.enableRetinaIcons,\n      gridSize: (_h = this._gridSize) !== null && _h !== void 0 ? _h : options.gridSize,\n      ignoreHidden: (_j = this._ignoreHidden) !== null && _j !== void 0 ? _j : options.ignoreHidden,\n      imageExtension: (_k = this._imageExtension) !== null && _k !== void 0 ? _k : options.imageExtension,\n      imagePath: (_l = this._imagePath) !== null && _l !== void 0 ? _l : options.imagePath,\n      imageSizes: (_m = this._imageSizes) !== null && _m !== void 0 ? _m : options.imageSizes,\n      maxZoom: (_o = this._maxZoom) !== null && _o !== void 0 ? _o : options.maxZoom,\n      minimumClusterSize: (_p = this._minimumClusterSize) !== null && _p !== void 0 ? _p : options.minimumClusterSize,\n      styles: (_q = this._styles) !== null && _q !== void 0 ? _q : options.styles,\n      title: (_r = this._title) !== null && _r !== void 0 ? _r : options.title,\n      zIndex: (_s = this._zIndex) !== null && _s !== void 0 ? _s : options.zIndex,\n      zoomOnClick: (_t = this._zoomOnClick) !== null && _t !== void 0 ? _t : options.zoomOnClick\n    });\n  }\n\n  _watchForMarkerChanges() {\n    this._assertInitialized();\n\n    const initialMarkers = [];\n\n    for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n      this._currentMarkers.add(marker);\n\n      initialMarkers.push(marker);\n    }\n\n    this.markerClusterer.addMarkers(initialMarkers);\n\n    this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(markerComponents => {\n      this._assertInitialized();\n\n      const newMarkers = new Set(this._getInternalMarkers(markerComponents));\n      const markersToAdd = [];\n      const markersToRemove = [];\n\n      for (const marker of Array.from(newMarkers)) {\n        if (!this._currentMarkers.has(marker)) {\n          this._currentMarkers.add(marker);\n\n          markersToAdd.push(marker);\n        }\n      }\n\n      for (const marker of Array.from(this._currentMarkers)) {\n        if (!newMarkers.has(marker)) {\n          markersToRemove.push(marker);\n        }\n      }\n\n      this.markerClusterer.addMarkers(markersToAdd, true);\n      this.markerClusterer.removeMarkers(markersToRemove, true);\n      this.markerClusterer.repaint();\n\n      for (const marker of markersToRemove) {\n        this._currentMarkers.delete(marker);\n      }\n    });\n  }\n\n  _getInternalMarkers(markers) {\n    return markers.filter(markerComponent => !!markerComponent.marker).map(markerComponent => markerComponent.marker);\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.markerClusterer) {\n        throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' + 'Please wait for the MarkerClusterer to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapMarkerClusterer.ɵfac = function MapMarkerClusterer_Factory(t) {\n  return new (t || MapMarkerClusterer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapMarkerClusterer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MapMarkerClusterer,\n  selectors: [[\"map-marker-clusterer\"]],\n  contentQueries: function MapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MapMarker, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._markers = _t);\n    }\n  },\n  inputs: {\n    ariaLabelFn: \"ariaLabelFn\",\n    averageCenter: \"averageCenter\",\n    batchSize: \"batchSize\",\n    batchSizeIE: \"batchSizeIE\",\n    calculator: \"calculator\",\n    clusterClass: \"clusterClass\",\n    enableRetinaIcons: \"enableRetinaIcons\",\n    gridSize: \"gridSize\",\n    ignoreHidden: \"ignoreHidden\",\n    imageExtension: \"imageExtension\",\n    imagePath: \"imagePath\",\n    imageSizes: \"imageSizes\",\n    maxZoom: \"maxZoom\",\n    minimumClusterSize: \"minimumClusterSize\",\n    styles: \"styles\",\n    title: \"title\",\n    zIndex: \"zIndex\",\n    zoomOnClick: \"zoomOnClick\",\n    options: \"options\"\n  },\n  outputs: {\n    clusteringbegin: \"clusteringbegin\",\n    clusteringend: \"clusteringend\",\n    clusterClick: \"clusterClick\"\n  },\n  exportAs: [\"mapMarkerClusterer\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MapMarkerClusterer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarkerClusterer, [{\n    type: Component,\n    args: [{\n      selector: 'map-marker-clusterer',\n      exportAs: 'mapMarkerClusterer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    ariaLabelFn: [{\n      type: Input\n    }],\n    averageCenter: [{\n      type: Input\n    }],\n    batchSize: [{\n      type: Input\n    }],\n    batchSizeIE: [{\n      type: Input\n    }],\n    calculator: [{\n      type: Input\n    }],\n    clusterClass: [{\n      type: Input\n    }],\n    enableRetinaIcons: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    ignoreHidden: [{\n      type: Input\n    }],\n    imageExtension: [{\n      type: Input\n    }],\n    imagePath: [{\n      type: Input\n    }],\n    imageSizes: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    minimumClusterSize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    zoomOnClick: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    clusteringbegin: [{\n      type: Output\n    }],\n    clusteringend: [{\n      type: Output\n    }],\n    clusterClick: [{\n      type: Output\n    }],\n    _markers: [{\n      type: ContentChildren,\n      args: [MapMarker, {\n        descendants: true\n      }]\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n\n\nclass MapPolygon {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._paths = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n     */\n\n    this.polygonClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n     */\n\n    this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n     */\n\n    this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n     */\n\n    this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n     */\n\n    this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n     */\n\n    this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n     */\n\n    this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n     */\n\n    this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n     */\n\n    this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n     */\n\n    this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n     */\n\n    this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set paths(paths) {\n    this._paths.next(paths);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.polygon = new google.maps.Polygon(options);\n        });\n\n        this._assertInitialized();\n\n        this.polygon.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.polygon);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return this.polygon.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n\n\n  getEditable() {\n    this._assertInitialized();\n\n    return this.polygon.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n\n\n  getPath() {\n    this._assertInitialized();\n\n    return this.polygon.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n\n\n  getPaths() {\n    this._assertInitialized();\n\n    return this.polygon.getPaths();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.polygon.getVisible();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions = Object.assign(Object.assign({}, options), {\n        paths: paths || options.paths\n      });\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.polygon.setOptions(options);\n    });\n  }\n\n  _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.polygon) {\n        throw Error('Cannot interact with a Google Map Polygon before it has been ' + 'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapPolygon.ɵfac = function MapPolygon_Factory(t) {\n  return new (t || MapPolygon)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapPolygon.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapPolygon,\n  selectors: [[\"map-polygon\"]],\n  inputs: {\n    options: \"options\",\n    paths: \"paths\"\n  },\n  outputs: {\n    polygonClick: \"polygonClick\",\n    polygonDblclick: \"polygonDblclick\",\n    polygonDrag: \"polygonDrag\",\n    polygonDragend: \"polygonDragend\",\n    polygonDragstart: \"polygonDragstart\",\n    polygonMousedown: \"polygonMousedown\",\n    polygonMousemove: \"polygonMousemove\",\n    polygonMouseout: \"polygonMouseout\",\n    polygonMouseover: \"polygonMouseover\",\n    polygonMouseup: \"polygonMouseup\",\n    polygonRightclick: \"polygonRightclick\"\n  },\n  exportAs: [\"mapPolygon\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polygon',\n      exportAs: 'mapPolygon'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }],\n    polygonClick: [{\n      type: Output\n    }],\n    polygonDblclick: [{\n      type: Output\n    }],\n    polygonDrag: [{\n      type: Output\n    }],\n    polygonDragend: [{\n      type: Output\n    }],\n    polygonDragstart: [{\n      type: Output\n    }],\n    polygonMousedown: [{\n      type: Output\n    }],\n    polygonMousemove: [{\n      type: Output\n    }],\n    polygonMouseout: [{\n      type: Output\n    }],\n    polygonMouseover: [{\n      type: Output\n    }],\n    polygonMouseup: [{\n      type: Output\n    }],\n    polygonRightclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n\n\nclass MapPolyline {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._path = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n     */\n\n    this.polylineClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n     */\n\n    this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n     */\n\n    this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n     */\n\n    this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n     */\n\n    this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n     */\n\n    this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n     */\n\n    this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n     */\n\n    this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n     */\n\n    this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n     */\n\n    this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n     */\n\n    this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set path(path) {\n    this._path.next(path);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n\n        this._assertInitialized();\n\n        this.polyline.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.polyline);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return this.polyline.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n\n\n  getEditable() {\n    this._assertInitialized();\n\n    return this.polyline.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n\n\n  getPath() {\n    this._assertInitialized();\n\n    return this.polyline.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.polyline.getVisible();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions = Object.assign(Object.assign({}, options), {\n        path: path || options.path\n      });\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.polyline.setOptions(options);\n    });\n  }\n\n  _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n\n        this.polyline.setPath(path);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.polyline) {\n        throw Error('Cannot interact with a Google Map Polyline before it has been ' + 'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapPolyline.ɵfac = function MapPolyline_Factory(t) {\n  return new (t || MapPolyline)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapPolyline.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapPolyline,\n  selectors: [[\"map-polyline\"]],\n  inputs: {\n    options: \"options\",\n    path: \"path\"\n  },\n  outputs: {\n    polylineClick: \"polylineClick\",\n    polylineDblclick: \"polylineDblclick\",\n    polylineDrag: \"polylineDrag\",\n    polylineDragend: \"polylineDragend\",\n    polylineDragstart: \"polylineDragstart\",\n    polylineMousedown: \"polylineMousedown\",\n    polylineMousemove: \"polylineMousemove\",\n    polylineMouseout: \"polylineMouseout\",\n    polylineMouseover: \"polylineMouseover\",\n    polylineMouseup: \"polylineMouseup\",\n    polylineRightclick: \"polylineRightclick\"\n  },\n  exportAs: [\"mapPolyline\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polyline',\n      exportAs: 'mapPolyline'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    polylineClick: [{\n      type: Output\n    }],\n    polylineDblclick: [{\n      type: Output\n    }],\n    polylineDrag: [{\n      type: Output\n    }],\n    polylineDragend: [{\n      type: Output\n    }],\n    polylineDragstart: [{\n      type: Output\n    }],\n    polylineMousedown: [{\n      type: Output\n    }],\n    polylineMousemove: [{\n      type: Output\n    }],\n    polylineMouseout: [{\n      type: Output\n    }],\n    polylineMouseover: [{\n      type: Output\n    }],\n    polylineMouseup: [{\n      type: Output\n    }],\n    polylineRightclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n\n\nclass MapRectangle {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n     */\n\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n     */\n\n    this.rectangleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n     */\n\n    this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n     */\n\n    this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n     */\n\n    this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n     */\n\n    this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n     */\n\n    this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n     */\n\n    this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n     */\n\n    this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n     */\n\n    this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n     */\n\n    this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n     */\n\n    this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  set options(options) {\n    this._options.next(options || {});\n  }\n\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.rectangle = new google.maps.Rectangle(options);\n        });\n\n        this._assertInitialized();\n\n        this.rectangle.setMap(this._map.googleMap);\n\n        this._eventManager.setTarget(this.rectangle);\n      });\n\n      this._watchForOptionsChanges();\n\n      this._watchForBoundsChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n\n\n  getBounds() {\n    this._assertInitialized();\n\n    return this.rectangle.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n\n\n  getDraggable() {\n    this._assertInitialized();\n\n    return this.rectangle.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n\n\n  getEditable() {\n    this._assertInitialized();\n\n    return this.rectangle.getEditable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n\n\n  getVisible() {\n    this._assertInitialized();\n\n    return this.rectangle.getVisible();\n  }\n\n  _combineOptions() {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions = Object.assign(Object.assign({}, options), {\n        bounds: bounds || options.bounds\n      });\n      return combinedOptions;\n    }));\n  }\n\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.rectangle.setOptions(options);\n    });\n  }\n\n  _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.rectangle) {\n        throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' + 'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapRectangle.ɵfac = function MapRectangle_Factory(t) {\n  return new (t || MapRectangle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapRectangle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapRectangle,\n  selectors: [[\"map-rectangle\"]],\n  inputs: {\n    options: \"options\",\n    bounds: \"bounds\"\n  },\n  outputs: {\n    boundsChanged: \"boundsChanged\",\n    rectangleClick: \"rectangleClick\",\n    rectangleDblclick: \"rectangleDblclick\",\n    rectangleDrag: \"rectangleDrag\",\n    rectangleDragend: \"rectangleDragend\",\n    rectangleDragstart: \"rectangleDragstart\",\n    rectangleMousedown: \"rectangleMousedown\",\n    rectangleMousemove: \"rectangleMousemove\",\n    rectangleMouseout: \"rectangleMouseout\",\n    rectangleMouseover: \"rectangleMouseover\",\n    rectangleMouseup: \"rectangleMouseup\",\n    rectangleRightclick: \"rectangleRightclick\"\n  },\n  exportAs: [\"mapRectangle\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-rectangle',\n      exportAs: 'mapRectangle'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblclick: [{\n      type: Output\n    }],\n    rectangleDrag: [{\n      type: Output\n    }],\n    rectangleDragend: [{\n      type: Output\n    }],\n    rectangleDragstart: [{\n      type: Output\n    }],\n    rectangleMousedown: [{\n      type: Output\n    }],\n    rectangleMousemove: [{\n      type: Output\n    }],\n    rectangleMouseout: [{\n      type: Output\n    }],\n    rectangleMouseover: [{\n      type: Output\n    }],\n    rectangleMouseup: [{\n      type: Output\n    }],\n    rectangleRightclick: [{\n      type: Output\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\n\n\nclass MapTrafficLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._autoRefresh = new BehaviorSubject(true);\n    this._destroyed = new Subject();\n  }\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n\n\n  set autoRefresh(autoRefresh) {\n    this._autoRefresh.next(autoRefresh);\n  }\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        this._ngZone.runOutsideAngular(() => {\n          this.trafficLayer = new google.maps.TrafficLayer(options);\n        });\n\n        this._assertInitialized();\n\n        this.trafficLayer.setMap(this._map.googleMap);\n      });\n\n      this._watchForAutoRefreshChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    if (this.trafficLayer) {\n      this.trafficLayer.setMap(null);\n    }\n  }\n\n  _combineOptions() {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions = {\n        autoRefresh\n      };\n      return combinedOptions;\n    }));\n  }\n\n  _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n\n      this.trafficLayer.setOptions(options);\n    });\n  }\n\n  _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n\n    if (!this.trafficLayer) {\n      throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' + 'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n\n}\n\nMapTrafficLayer.ɵfac = function MapTrafficLayer_Factory(t) {\n  return new (t || MapTrafficLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapTrafficLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapTrafficLayer,\n  selectors: [[\"map-traffic-layer\"]],\n  inputs: {\n    autoRefresh: \"autoRefresh\"\n  },\n  exportAs: [\"mapTrafficLayer\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTrafficLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-traffic-layer',\n      exportAs: 'mapTrafficLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    autoRefresh: [{\n      type: Input\n    }]\n  });\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\n\n\nclass MapTransitLayer extends MapBaseLayer {\n  _initializeObject() {\n    this.transitLayer = new google.maps.TransitLayer();\n  }\n\n  _setMap() {\n    this._assertLayerInitialized();\n\n    this.transitLayer.setMap(this._map.googleMap);\n  }\n\n  _unsetMap() {\n    if (this.transitLayer) {\n      this.transitLayer.setMap(null);\n    }\n  }\n\n  _assertLayerInitialized() {\n    if (!this.transitLayer) {\n      throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n\n}\n\nMapTransitLayer.ɵfac = /* @__PURE__ */function () {\n  let ɵMapTransitLayer_BaseFactory;\n  return function MapTransitLayer_Factory(t) {\n    return (ɵMapTransitLayer_BaseFactory || (ɵMapTransitLayer_BaseFactory = i0.ɵɵgetInheritedFactory(MapTransitLayer)))(t || MapTransitLayer);\n  };\n}();\n\nMapTransitLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapTransitLayer,\n  selectors: [[\"map-transit-layer\"]],\n  exportAs: [\"mapTransitLayer\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-transit-layer',\n      exportAs: 'mapTransitLayer'\n    }]\n  }], null, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\n\n\nclass MapHeatmapLayer {\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n  }\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n\n\n  set data(data) {\n    this._data = data;\n  }\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n\n\n  set options(options) {\n    this._options = options;\n  }\n\n  ngOnInit() {\n    var _a, _b;\n\n    if (this._googleMap._isBrowser) {\n      if (!((_b = (_a = window.google) === null || _a === void 0 ? void 0 : _a.maps) === null || _b === void 0 ? void 0 : _b.visualization) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' + 'Please install the Google Maps JavaScript API with the \"visualization\" library: ' + 'https://developers.google.com/maps/documentation/javascript/visualization');\n      } // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n      });\n\n      this._assertInitialized();\n\n      this.heatmap.setMap(this._googleMap.googleMap);\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      _data,\n      heatmap\n    } = this;\n\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.heatmap) {\n      this.heatmap.setMap(null);\n    }\n  }\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n\n\n  getData() {\n    this._assertInitialized();\n\n    return this.heatmap.getData();\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n\n\n  _combineOptions() {\n    const options = this._options || {};\n    return Object.assign(Object.assign({}, options), {\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap\n    });\n  }\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n\n\n  _normalizeData(data) {\n    const result = [];\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n    return result;\n  }\n  /** Asserts that the heatmap object has been initialized. */\n\n\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.heatmap) {\n        throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' + 'initialized. Please wait for the heatmap to load before trying to interact with it.');\n      }\n    }\n  }\n\n}\n\nMapHeatmapLayer.ɵfac = function MapHeatmapLayer_Factory(t) {\n  return new (t || MapHeatmapLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nMapHeatmapLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapHeatmapLayer,\n  selectors: [[\"map-heatmap-layer\"]],\n  inputs: {\n    data: \"data\",\n    options: \"options\"\n  },\n  exportAs: [\"mapHeatmapLayer\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapHeatmapLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-heatmap-layer',\n      exportAs: 'mapHeatmapLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }]\n  });\n})();\n/** Asserts that an object is a `LatLngLiteral`. */\n\n\nfunction isLatLngLiteral(value) {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst COMPONENTS = [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapHeatmapLayer];\n\nclass GoogleMapsModule {}\n\nGoogleMapsModule.ɵfac = function GoogleMapsModule_Factory(t) {\n  return new (t || GoogleMapsModule)();\n};\n\nGoogleMapsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GoogleMapsModule\n});\nGoogleMapsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMapsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: COMPONENTS,\n      exports: COMPONENTS\n    }]\n  }], null, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\n\n\nclass MapDirectionsService {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n\n\n  route(request) {\n    return new Observable(observer => {\n      // Initialize the `DirectionsService` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._directionsService) {\n        this._directionsService = new google.maps.DirectionsService();\n      }\n\n      this._directionsService.route(request, (result, status) => {\n        this._ngZone.run(() => {\n          observer.next({\n            result: result || undefined,\n            status\n          });\n          observer.complete();\n        });\n      });\n    });\n  }\n\n}\n\nMapDirectionsService.ɵfac = function MapDirectionsService_Factory(t) {\n  return new (t || MapDirectionsService)(i0.ɵɵinject(i0.NgZone));\n};\n\nMapDirectionsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MapDirectionsService,\n  factory: MapDirectionsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})(); /// <reference types=\"google.maps\" />\n\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\n\n\nclass MapGeocoder {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n\n\n  geocode(request) {\n    return new Observable(observer => {\n      // Initialize the `Geocoder` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._geocoder) {\n        this._geocoder = new google.maps.Geocoder();\n      }\n\n      this._geocoder.geocode(request, (results, status) => {\n        this._ngZone.run(() => {\n          observer.next({\n            results: results || [],\n            status\n          });\n          observer.complete();\n        });\n      });\n    });\n  }\n\n}\n\nMapGeocoder.ɵfac = function MapGeocoder_Factory(t) {\n  return new (t || MapGeocoder)(i0.ɵɵinject(i0.NgZone));\n};\n\nMapGeocoder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MapGeocoder,\n  factory: MapGeocoder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };","map":{"version":3,"names":["i0","EventEmitter","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","Directive","ContentChildren","NgModule","Injectable","isPlatformBrowser","BehaviorSubject","Observable","Subject","combineLatest","switchMap","take","map","takeUntil","MapEventManager","constructor","_ngZone","_pending","_listeners","_targetStream","undefined","_clearListeners","listener","remove","getLazyEmitter","name","pipe","target","observable","observer","push","addListener","event","run","next","setTarget","currentTarget","value","forEach","subscriber","subscribe","destroy","complete","DEFAULT_OPTIONS","center","lat","lng","zoom","mapTypeId","DEFAULT_HEIGHT","DEFAULT_WIDTH","GoogleMap","_elementRef","platformId","_eventManager","height","width","_options","mapInitialized","authFailure","boundsChanged","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","googleMapsWindow","window","google","ngDevMode","Error","_existingAuthFailureCallback","gm_authFailure","emit","_center","_zoom","options","ngOnChanges","changes","_setSize","googleMap","setOptions","_combineOptions","setCenter","setZoom","setMapTypeId","ngOnInit","_mapEl","nativeElement","querySelector","runOutsideAngular","maps","Map","ngOnDestroy","fitBounds","bounds","padding","_assertInitialized","panBy","x","y","panTo","latLng","panToBounds","latLngBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","controls","data","mapTypes","overlayMapTypes","styles","style","coerceCssPixelValue","_a","_b","Object","assign","ɵfac","ElementRef","NgZone","ɵcmp","type","args","selector","exportAs","changeDetection","OnPush","template","encapsulation","None","decorators","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","ɵdir","MapBicyclingLayer","bicyclingLayer","BicyclingLayer","_assertLayerInitialized","setMap","MapCircle","_radius","_destroyed","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","radius","circle","Circle","_watchForOptionsChanges","_watchForCenterChanges","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","combinedOptions","setRadius","MapDirectionsRenderer","_googleMap","directionsChanged","directions","_directions","directionsRenderer","DirectionsRenderer","setDirections","getDirections","getPanel","getRouteIndex","MapGroundOverlay","_opacity","_url","_bounds","clickable","url","opacity","groundOverlay","GroundOverlay","getValue","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","set","MapInfoWindow","_position","_destroy","closeclick","contentChanged","domready","positionChanged","zindexChanged","position","combinedOptionsChanges","infoWindow","InfoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","open","anchor","shouldFocus","anchorObject","getAnchor","get","display","content","setPosition","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayer","KmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","DEFAULT_MARKER_OPTIONS","MapMarker","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","title","_title","label","_label","_clickable","icon","_icon","visible","_visible","marker","Marker","setTitle","setLabel","setClickable","setIcon","setVisible","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","DEFAULT_CLUSTERER_OPTIONS","MapMarkerClusterer","_currentMarkers","Set","ariaLabelFn","clusteringbegin","clusteringend","clusterClick","_canInitialize","averageCenter","_averageCenter","batchSizeIE","_batchSizeIE","calculator","_calculator","clusterClass","_clusterClass","enableRetinaIcons","_enableRetinaIcons","gridSize","_gridSize","ignoreHidden","_ignoreHidden","imageExtension","_imageExtension","imagePath","_imagePath","imageSizes","_imageSizes","maxZoom","_maxZoom","minimumClusterSize","_minimumClusterSize","_styles","zIndex","_zIndex","zoomOnClick","_zoomOnClick","MarkerClusterer","markerClusterer","ngAfterContentInit","_watchForMarkerChanges","clusterer","setAverageCenter","setBatchSizeIE","setCalculator","setClusterClass","setEnableRetinaIcons","setGridSize","setIgnoreHidden","setImageExtension","setImagePath","setImageSizes","setMaxZoom","setMinimumClusterSize","setStyles","setZIndex","setZoomOnClick","fitMapToMarkers","getAverageCenter","getBatchSizeIE","getCalculator","getClusterClass","getClusters","getEnableRetinaIcons","getGridSize","getIgnoreHidden","getImageExtension","getImagePath","getImageSizes","getMaxZoom","getMinimumClusterSize","getStyles","getTotalClusters","getTotalMarkers","getZoomOnClick","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","batchSize","initialMarkers","_getInternalMarkers","_markers","toArray","add","addMarkers","markerComponents","newMarkers","markersToAdd","markersToRemove","Array","from","has","removeMarkers","repaint","delete","markers","filter","markerComponent","descendants","MapPolygon","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","paths","polygon","Polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolyline","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","path","polyline","Polyline","setPath","MapRectangle","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangle","Rectangle","_watchForBoundsChanges","setBounds","MapTrafficLayer","_autoRefresh","autoRefresh","trafficLayer","TrafficLayer","_watchForAutoRefreshChanges","MapTransitLayer","transitLayer","TransitLayer","MapHeatmapLayer","_data","visualization","heatmap","HeatmapLayer","setData","_normalizeData","getData","result","item","isLatLngLiteral","LatLng","COMPONENTS","GoogleMapsModule","ɵmod","ɵinj","declarations","exports","MapDirectionsService","route","request","_directionsService","DirectionsService","status","ɵprov","providedIn","MapGeocoder","geocode","_geocoder","Geocoder","results"],"sources":["C:/Users/Valera/Documents/GIT/Essential/Project1/Project1/ClientApp/node_modules/@angular/google-maps/fesm2015/google-maps.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nclass MapEventManager {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        /** Pending listeners that were added before the target was set. */\n        this._pending = [];\n        this._listeners = [];\n        this._targetStream = new BehaviorSubject(undefined);\n    }\n    /** Clears all currently-registered event listeners. */\n    _clearListeners() {\n        for (const listener of this._listeners) {\n            listener.remove();\n        }\n        this._listeners = [];\n    }\n    /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n    getLazyEmitter(name) {\n        return this._targetStream.pipe(switchMap(target => {\n            const observable = new Observable(observer => {\n                // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                if (!target) {\n                    this._pending.push({ observable, observer });\n                    return undefined;\n                }\n                const listener = target.addListener(name, (event) => {\n                    this._ngZone.run(() => observer.next(event));\n                });\n                this._listeners.push(listener);\n                return () => listener.remove();\n            });\n            return observable;\n        }));\n    }\n    /** Sets the current target that the manager should bind events to. */\n    setTarget(target) {\n        const currentTarget = this._targetStream.value;\n        if (target === currentTarget) {\n            return;\n        }\n        // Clear the listeners from the pre-existing target.\n        if (currentTarget) {\n            this._clearListeners();\n            this._pending = [];\n        }\n        this._targetStream.next(target);\n        // Add the listeners that were bound before the map was initialized.\n        this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n        this._pending = [];\n    }\n    /** Destroys the manager and clears the event listeners. */\n    destroy() {\n        this._clearListeners();\n        this._pending = [];\n        this._targetStream.complete();\n    }\n}\n\n/// <reference types=\"google.maps\" />\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n    center: { lat: 37.421995, lng: -122.084092 },\n    zoom: 17,\n    // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n    mapTypeId: 'roadmap',\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n    constructor(_elementRef, _ngZone, platformId) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n        this.height = DEFAULT_HEIGHT;\n        /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n        this.width = DEFAULT_WIDTH;\n        this._options = DEFAULT_OPTIONS;\n        /** Event emitted when the map is initialized. */\n        this.mapInitialized = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n         */\n        this.authFailure = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n         */\n        this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n         */\n        this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n         */\n        this.idle = this._eventManager.getLazyEmitter('idle');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n         */\n        this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n         */\n        this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n         */\n        this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n         */\n        this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n         */\n        this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n         */\n        this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n        this._isBrowser = isPlatformBrowser(platformId);\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace google not found, cannot construct embedded google ' +\n                    'map. Please install the Google Maps JavaScript API: ' +\n                    'https://developers.google.com/maps/documentation/javascript/' +\n                    'tutorial#Loading_the_Maps_API');\n            }\n            this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n            googleMapsWindow.gm_authFailure = () => {\n                if (this._existingAuthFailureCallback) {\n                    this._existingAuthFailureCallback();\n                }\n                this.authFailure.emit();\n            };\n        }\n    }\n    set center(center) {\n        this._center = center;\n    }\n    set zoom(zoom) {\n        this._zoom = zoom;\n    }\n    set options(options) {\n        this._options = options || DEFAULT_OPTIONS;\n    }\n    ngOnChanges(changes) {\n        if (changes['height'] || changes['width']) {\n            this._setSize();\n        }\n        const googleMap = this.googleMap;\n        if (googleMap) {\n            if (changes['options']) {\n                googleMap.setOptions(this._combineOptions());\n            }\n            if (changes['center'] && this._center) {\n                googleMap.setCenter(this._center);\n            }\n            // Note that the zoom can be zero.\n            if (changes['zoom'] && this._zoom != null) {\n                googleMap.setZoom(this._zoom);\n            }\n            if (changes['mapTypeId'] && this.mapTypeId) {\n                googleMap.setMapTypeId(this.mapTypeId);\n            }\n        }\n    }\n    ngOnInit() {\n        // It should be a noop during server-side rendering.\n        if (this._isBrowser) {\n            this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n            this._setSize();\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n            });\n            this._eventManager.setTarget(this.googleMap);\n            this.mapInitialized.emit(this.googleMap);\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n        }\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n    fitBounds(bounds, padding) {\n        this._assertInitialized();\n        this.googleMap.fitBounds(bounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n    panBy(x, y) {\n        this._assertInitialized();\n        this.googleMap.panBy(x, y);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n    panTo(latLng) {\n        this._assertInitialized();\n        this.googleMap.panTo(latLng);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n    panToBounds(latLngBounds, padding) {\n        this._assertInitialized();\n        this.googleMap.panToBounds(latLngBounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.googleMap.getBounds() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.googleMap.getCenter();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n    getClickableIcons() {\n        this._assertInitialized();\n        return this.googleMap.getClickableIcons();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n    getHeading() {\n        this._assertInitialized();\n        return this.googleMap.getHeading();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n    getMapTypeId() {\n        this._assertInitialized();\n        return this.googleMap.getMapTypeId();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n    getProjection() {\n        this._assertInitialized();\n        return this.googleMap.getProjection() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n    getStreetView() {\n        this._assertInitialized();\n        return this.googleMap.getStreetView();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n    getTilt() {\n        this._assertInitialized();\n        return this.googleMap.getTilt();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n    getZoom() {\n        this._assertInitialized();\n        return this.googleMap.getZoom();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n    get controls() {\n        this._assertInitialized();\n        return this.googleMap.controls;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n    get data() {\n        this._assertInitialized();\n        return this.googleMap.data;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n    get mapTypes() {\n        this._assertInitialized();\n        return this.googleMap.mapTypes;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n    get overlayMapTypes() {\n        this._assertInitialized();\n        return this.googleMap.overlayMapTypes;\n    }\n    _setSize() {\n        if (this._mapEl) {\n            const styles = this._mapEl.style;\n            styles.height =\n                this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n            styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n        }\n    }\n    /** Combines the center and zoom and the other map options into a single object */\n    _combineOptions() {\n        var _a, _b;\n        const options = this._options || {};\n        return Object.assign(Object.assign({}, options), { \n            // It's important that we set **some** kind of `center` and `zoom`, otherwise\n            // Google Maps will render a blank rectangle which looks broken.\n            center: this._center || options.center || DEFAULT_OPTIONS.center, zoom: (_b = (_a = this._zoom) !== null && _a !== void 0 ? _a : options.zoom) !== null && _b !== void 0 ? _b : DEFAULT_OPTIONS.zoom, \n            // Passing in an undefined `mapTypeId` seems to break tile loading\n            // so make sure that we have some kind of default (see #22082).\n            mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId });\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n        if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n}\nGoogleMap.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: GoogleMap, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nGoogleMap.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: GoogleMap, selector: \"google-map\", inputs: { height: \"height\", width: \"width\", mapTypeId: \"mapTypeId\", center: \"center\", zoom: \"zoom\", options: \"options\" }, outputs: { mapInitialized: \"mapInitialized\", authFailure: \"authFailure\", boundsChanged: \"boundsChanged\", centerChanged: \"centerChanged\", mapClick: \"mapClick\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", mapDragstart: \"mapDragstart\", headingChanged: \"headingChanged\", idle: \"idle\", maptypeidChanged: \"maptypeidChanged\", mapMousemove: \"mapMousemove\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", projectionChanged: \"projectionChanged\", mapRightclick: \"mapRightclick\", tilesloaded: \"tilesloaded\", tiltChanged: \"tiltChanged\", zoomChanged: \"zoomChanged\" }, exportAs: [\"googleMap\"], usesOnChanges: true, ngImport: i0, template: '<div class=\"map-container\"></div><ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: GoogleMap, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'google-map',\n                    exportAs: 'googleMap',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, propDecorators: { height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], mapTypeId: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], zoom: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], mapInitialized: [{\n                type: Output\n            }], authFailure: [{\n                type: Output\n            }], boundsChanged: [{\n                type: Output\n            }], centerChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], headingChanged: [{\n                type: Output\n            }], idle: [{\n                type: Output\n            }], maptypeidChanged: [{\n                type: Output\n            }], mapMousemove: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], projectionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], tilesloaded: [{\n                type: Output\n            }], tiltChanged: [{\n                type: Output\n            }], zoomChanged: [{\n                type: Output\n            }] } });\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n/// <reference types=\"google.maps\" />\nclass MapBaseLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._ngZone.runOutsideAngular(() => {\n                this._initializeObject();\n            });\n            this._assertInitialized();\n            this._setMap();\n        }\n    }\n    ngOnDestroy() {\n        this._unsetMap();\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    _initializeObject() { }\n    _setMap() { }\n    _unsetMap() { }\n}\nMapBaseLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapBaseLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapBaseLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapBaseLayer, selector: \"map-base-layer\", exportAs: [\"mapBaseLayer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapBaseLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-base-layer',\n                    exportAs: 'mapBaseLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer extends MapBaseLayer {\n    _initializeObject() {\n        this.bicyclingLayer = new google.maps.BicyclingLayer();\n    }\n    _setMap() {\n        this._assertLayerInitialized();\n        this.bicyclingLayer.setMap(this._map.googleMap);\n    }\n    _unsetMap() {\n        if (this.bicyclingLayer) {\n            this.bicyclingLayer.setMap(null);\n        }\n    }\n    _assertLayerInitialized() {\n        if (!this.bicyclingLayer) {\n            throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapBicyclingLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapBicyclingLayer, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMapBicyclingLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapBicyclingLayer, selector: \"map-bicycling-layer\", exportAs: [\"mapBicyclingLayer\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapBicyclingLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-bicycling-layer',\n                    exportAs: 'mapBicyclingLayer',\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._center = new BehaviorSubject(undefined);\n        this._radius = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n         */\n        this.circleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n         */\n        this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n         */\n        this.circleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n         */\n        this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n         */\n        this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n         */\n        this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n         */\n        this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n         */\n        this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n         */\n        this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n         */\n        this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n         */\n        this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n         */\n        this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set center(center) {\n        this._center.next(center);\n    }\n    set radius(radius) {\n        this._radius.next(radius);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.circle = new google.maps.Circle(options);\n                });\n                this._assertInitialized();\n                this.circle.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.circle);\n            });\n            this._watchForOptionsChanges();\n            this._watchForCenterChanges();\n            this._watchForRadiusChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.circle) {\n            this.circle.setMap(null);\n        }\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.circle.getBounds();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.circle.getCenter();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.circle.getDraggable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.circle.getEditable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n     */\n    getRadius() {\n        this._assertInitialized();\n        return this.circle.getRadius();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.circle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { center: center || options.center, radius: radius !== undefined ? radius : options.radius });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.circle.setOptions(options);\n        });\n    }\n    _watchForCenterChanges() {\n        this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n            if (center) {\n                this._assertInitialized();\n                this.circle.setCenter(center);\n            }\n        });\n    }\n    _watchForRadiusChanges() {\n        this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n            if (radius !== undefined) {\n                this._assertInitialized();\n                this.circle.setRadius(radius);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.circle) {\n                throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                    'initialized. Please wait for the Circle to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapCircle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapCircle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapCircle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapCircle, selector: \"map-circle\", inputs: { options: \"options\", center: \"center\", radius: \"radius\" }, outputs: { centerChanged: \"centerChanged\", circleClick: \"circleClick\", circleDblclick: \"circleDblclick\", circleDrag: \"circleDrag\", circleDragend: \"circleDragend\", circleDragstart: \"circleDragstart\", circleMousedown: \"circleMousedown\", circleMousemove: \"circleMousemove\", circleMouseout: \"circleMouseout\", circleMouseover: \"circleMouseover\", circleMouseup: \"circleMouseup\", radiusChanged: \"radiusChanged\", circleRightclick: \"circleRightclick\" }, exportAs: [\"mapCircle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapCircle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-circle',\n                    exportAs: 'mapCircle',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], centerChanged: [{\n                type: Output\n            }], circleClick: [{\n                type: Output\n            }], circleDblclick: [{\n                type: Output\n            }], circleDrag: [{\n                type: Output\n            }], circleDragend: [{\n                type: Output\n            }], circleDragstart: [{\n                type: Output\n            }], circleMousedown: [{\n                type: Output\n            }], circleMousemove: [{\n                type: Output\n            }], circleMouseout: [{\n                type: Output\n            }], circleMouseover: [{\n                type: Output\n            }], circleMouseup: [{\n                type: Output\n            }], radiusChanged: [{\n                type: Output\n            }], circleRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/directions\n         * #DirectionsRenderer.directions_changed\n         */\n        this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions.directions\n     */\n    set directions(directions) {\n        this._directions = directions;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.directionsRenderer.setMap(this._googleMap.googleMap);\n            this._eventManager.setTarget(this.directionsRenderer);\n        }\n    }\n    ngOnChanges(changes) {\n        if (this.directionsRenderer) {\n            if (changes['options']) {\n                this.directionsRenderer.setOptions(this._combineOptions());\n            }\n            if (changes['directions'] && this._directions !== undefined) {\n                this.directionsRenderer.setDirections(this._directions);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this.directionsRenderer) {\n            this.directionsRenderer.setMap(null);\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getDirections\n     */\n    getDirections() {\n        this._assertInitialized();\n        return this.directionsRenderer.getDirections();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getPanel\n     */\n    getPanel() {\n        this._assertInitialized();\n        return this.directionsRenderer.getPanel();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getRouteIndex\n     */\n    getRouteIndex() {\n        this._assertInitialized();\n        return this.directionsRenderer.getRouteIndex();\n    }\n    _combineOptions() {\n        const options = this._options || {};\n        return Object.assign(Object.assign({}, options), { directions: this._directions || options.directions, map: this._googleMap.googleMap });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.directionsRenderer) {\n                throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' +\n                    'initialized. Please wait for the Directions Renderer to load before trying ' +\n                    'to interact with it.');\n            }\n        }\n    }\n}\nMapDirectionsRenderer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapDirectionsRenderer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapDirectionsRenderer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapDirectionsRenderer, selector: \"map-directions-renderer\", inputs: { directions: \"directions\", options: \"options\" }, outputs: { directionsChanged: \"directionsChanged\" }, exportAs: [\"mapDirectionsRenderer\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapDirectionsRenderer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-directions-renderer',\n                    exportAs: 'mapDirectionsRenderer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { directions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], directionsChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._opacity = new BehaviorSubject(1);\n        this._url = new BehaviorSubject('');\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /** Whether the overlay is clickable */\n        this.clickable = false;\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    }\n    /** URL of the image that will be shown in the overlay. */\n    set url(url) {\n        this._url.next(url);\n    }\n    /** Bounds for the overlay. */\n    get bounds() {\n        return this._bounds.value;\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    /** Opacity of the overlay. */\n    set opacity(opacity) {\n        this._opacity.next(opacity);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            // The ground overlay setup is slightly different from the other Google Maps objects in that\n            // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n            // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n            this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n                if (this.groundOverlay) {\n                    this.groundOverlay.setMap(null);\n                    this.groundOverlay = undefined;\n                }\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                if (bounds) {\n                    this._ngZone.runOutsideAngular(() => {\n                        this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n                            clickable: this.clickable,\n                            opacity: this._opacity.value,\n                        });\n                    });\n                    this._assertInitialized();\n                    this.groundOverlay.setMap(this._map.googleMap);\n                    this._eventManager.setTarget(this.groundOverlay);\n                }\n            });\n            this._watchForOpacityChanges();\n            this._watchForUrlChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.groundOverlay) {\n            this.groundOverlay.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.groundOverlay.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.groundOverlay.getOpacity();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.groundOverlay.getUrl();\n    }\n    _watchForOpacityChanges() {\n        this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n            if (opacity != null) {\n                this._assertInitialized();\n                this.groundOverlay.setOpacity(opacity);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            this._assertInitialized();\n            const overlay = this.groundOverlay;\n            overlay.set('url', url);\n            // Google Maps only redraws the overlay if we re-set the map.\n            overlay.setMap(null);\n            overlay.setMap(this._map.googleMap);\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.groundOverlay) {\n                throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                    'Please wait for the GroundOverlay to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapGroundOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapGroundOverlay, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapGroundOverlay.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapGroundOverlay, selector: \"map-ground-overlay\", inputs: { url: \"url\", bounds: \"bounds\", clickable: \"clickable\", opacity: \"opacity\" }, outputs: { mapClick: \"mapClick\", mapDblclick: \"mapDblclick\" }, exportAs: [\"mapGroundOverlay\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapGroundOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-ground-overlay',\n                    exportAs: 'mapGroundOverlay',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { url: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n    constructor(_googleMap, _elementRef, _ngZone) {\n        this._googleMap = _googleMap;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._position = new BehaviorSubject(undefined);\n        this._destroy = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n         */\n        this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.content_changed\n         */\n        this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n         */\n        this.domready = this._eventManager.getLazyEmitter('domready');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set position(position) {\n        this._position.next(position);\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            const combinedOptionsChanges = this._combineOptions();\n            combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.infoWindow = new google.maps.InfoWindow(options);\n                });\n                this._eventManager.setTarget(this.infoWindow);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPositionChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        // If no info window has been created on the server, we do not try closing it.\n        // On the server, an info window cannot be created and this would cause errors.\n        if (this.infoWindow) {\n            this.close();\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n    close() {\n        this._assertInitialized();\n        this.infoWindow.close();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n    getContent() {\n        this._assertInitialized();\n        return this.infoWindow.getContent() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.infoWindow.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.infoWindow.getZIndex();\n    }\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n    open(anchor, shouldFocus) {\n        this._assertInitialized();\n        const anchorObject = anchor ? anchor.getAnchor() : undefined;\n        // Prevent the info window from initializing when trying to reopen on the same anchor.\n        // Note that when the window is opened for the first time, the anchor will always be\n        // undefined. If that's the case, we have to allow it to open in order to handle the\n        // case where the window doesn't have an anchor, but is placed at a particular position.\n        if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n            this._elementRef.nativeElement.style.display = '';\n            // The config is cast to `any`, because the internal typings are out of date.\n            this.infoWindow.open({\n                map: this._googleMap.googleMap,\n                anchor: anchorObject,\n                shouldFocus,\n            });\n        }\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { position: position || options.position, content: this._elementRef.nativeElement });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n            this._assertInitialized();\n            this.infoWindow.setOptions(options);\n        });\n    }\n    _watchForPositionChanges() {\n        this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n            if (position) {\n                this._assertInitialized();\n                this.infoWindow.setPosition(position);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.infoWindow) {\n                throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                    'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                    'it.');\n            }\n        }\n    }\n}\nMapInfoWindow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapInfoWindow, deps: [{ token: GoogleMap }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapInfoWindow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapInfoWindow, selector: \"map-info-window\", inputs: { options: \"options\", position: \"position\" }, outputs: { closeclick: \"closeclick\", contentChanged: \"contentChanged\", domready: \"domready\", positionChanged: \"positionChanged\", zindexChanged: \"zindexChanged\" }, host: { styleAttribute: \"display: none\" }, exportAs: [\"mapInfoWindow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapInfoWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-info-window',\n                    exportAs: 'mapInfoWindow',\n                    host: { 'style': 'display: none' },\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], closeclick: [{\n                type: Output\n            }], contentChanged: [{\n                type: Output\n            }], domready: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._url = new BehaviorSubject('');\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n         */\n        this.kmlClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml\n         * #KmlLayer.defaultviewport_changed\n         */\n        this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n         */\n        this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set url(url) {\n        this._url.next(url);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => (this.kmlLayer = new google.maps.KmlLayer(options)));\n                this._assertInitialized();\n                this.kmlLayer.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.kmlLayer);\n            });\n            this._watchForOptionsChanges();\n            this._watchForUrlChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.kmlLayer) {\n            this.kmlLayer.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n     */\n    getDefaultViewport() {\n        this._assertInitialized();\n        return this.kmlLayer.getDefaultViewport();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n     */\n    getMetadata() {\n        this._assertInitialized();\n        return this.kmlLayer.getMetadata();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n     */\n    getStatus() {\n        this._assertInitialized();\n        return this.kmlLayer.getStatus();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.kmlLayer.getUrl();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.kmlLayer.getZIndex();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { url: url || options.url });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            if (this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setOptions(options);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            if (url && this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setUrl(url);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.kmlLayer) {\n                throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                    'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapKmlLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapKmlLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapKmlLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapKmlLayer, selector: \"map-kml-layer\", inputs: { options: \"options\", url: \"url\" }, outputs: { kmlClick: \"kmlClick\", defaultviewportChanged: \"defaultviewportChanged\", statusChanged: \"statusChanged\" }, exportAs: [\"mapKmlLayer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapKmlLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-kml-layer',\n                    exportAs: 'mapKmlLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], url: [{\n                type: Input\n            }], kmlClick: [{\n                type: Output\n            }], defaultviewportChanged: [{\n                type: Output\n            }], statusChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n    position: { lat: 37.421995, lng: -122.084092 },\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n         */\n        this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n         */\n        this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n         */\n        this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n         */\n        this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n         */\n        this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n         */\n        this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n         */\n        this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n         */\n        this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n         */\n        this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n         */\n        this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n         */\n        this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    }\n    /**\n     * Title of the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n     */\n    set title(title) {\n        this._title = title;\n    }\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n    set position(position) {\n        this._position = position;\n    }\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n    set label(label) {\n        this._label = label;\n    }\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n    set clickable(clickable) {\n        this._clickable = clickable;\n    }\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n    set icon(icon) {\n        this._icon = icon;\n    }\n    /**\n     * Whether the marker is visible.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n     */\n    set visible(value) {\n        this._visible = value;\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.marker = new google.maps.Marker(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.marker.setMap(this._googleMap.googleMap);\n            this._eventManager.setTarget(this.marker);\n        }\n    }\n    ngOnChanges(changes) {\n        const { marker, _title, _position, _label, _clickable, _icon, _visible } = this;\n        if (marker) {\n            if (changes['options']) {\n                marker.setOptions(this._combineOptions());\n            }\n            if (changes['title'] && _title !== undefined) {\n                marker.setTitle(_title);\n            }\n            if (changes['position'] && _position) {\n                marker.setPosition(_position);\n            }\n            if (changes['label'] && _label !== undefined) {\n                marker.setLabel(_label);\n            }\n            if (changes['clickable'] && _clickable !== undefined) {\n                marker.setClickable(_clickable);\n            }\n            if (changes['icon'] && _icon) {\n                marker.setIcon(_icon);\n            }\n            if (changes['visible'] && _visible !== undefined) {\n                marker.setVisible(_visible);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this.marker) {\n            this.marker.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n    getAnimation() {\n        this._assertInitialized();\n        return this.marker.getAnimation() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n    getClickable() {\n        this._assertInitialized();\n        return this.marker.getClickable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n    getCursor() {\n        this._assertInitialized();\n        return this.marker.getCursor() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return !!this.marker.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n    getIcon() {\n        this._assertInitialized();\n        return this.marker.getIcon() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n    getLabel() {\n        this._assertInitialized();\n        return this.marker.getLabel() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.marker.getOpacity() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.marker.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n    getShape() {\n        this._assertInitialized();\n        return this.marker.getShape() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n    getTitle() {\n        this._assertInitialized();\n        return this.marker.getTitle() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.marker.getVisible();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.marker.getZIndex() || null;\n    }\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n    getAnchor() {\n        this._assertInitialized();\n        return this.marker;\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        var _a, _b;\n        const options = this._options || DEFAULT_MARKER_OPTIONS;\n        return Object.assign(Object.assign({}, options), { title: this._title || options.title, position: this._position || options.position, label: this._label || options.label, clickable: (_a = this._clickable) !== null && _a !== void 0 ? _a : options.clickable, map: this._googleMap.googleMap, icon: this._icon || options.icon, visible: (_b = this._visible) !== null && _b !== void 0 ? _b : options.visible });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.marker) {\n                throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                    'initialized. Please wait for the Marker to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapMarker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapMarker, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapMarker.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapMarker, selector: \"map-marker\", inputs: { title: \"title\", position: \"position\", label: \"label\", clickable: \"clickable\", options: \"options\", icon: \"icon\", visible: \"visible\" }, outputs: { animationChanged: \"animationChanged\", mapClick: \"mapClick\", clickableChanged: \"clickableChanged\", cursorChanged: \"cursorChanged\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", draggableChanged: \"draggableChanged\", mapDragstart: \"mapDragstart\", flatChanged: \"flatChanged\", iconChanged: \"iconChanged\", mapMousedown: \"mapMousedown\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", mapMouseup: \"mapMouseup\", positionChanged: \"positionChanged\", mapRightclick: \"mapRightclick\", shapeChanged: \"shapeChanged\", titleChanged: \"titleChanged\", visibleChanged: \"visibleChanged\", zindexChanged: \"zindexChanged\" }, exportAs: [\"mapMarker\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapMarker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-marker',\n                    exportAs: 'mapMarker',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { title: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], animationChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], clickableChanged: [{\n                type: Output\n            }], cursorChanged: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], draggableChanged: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], flatChanged: [{\n                type: Output\n            }], iconChanged: [{\n                type: Output\n            }], mapMousedown: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], mapMouseup: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], shapeChanged: [{\n                type: Output\n            }], titleChanged: [{\n                type: Output\n            }], visibleChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._currentMarkers = new Set();\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._destroy = new Subject();\n        this.ariaLabelFn = () => '';\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/\n         * _google_markerclustererplus.html#clusteringbegin\n         */\n        this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n         */\n        this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n        /** Emits when a cluster has been clicked. */\n        this.clusterClick = this._eventManager.getLazyEmitter('click');\n        this._canInitialize = this._googleMap._isBrowser;\n    }\n    set averageCenter(averageCenter) {\n        this._averageCenter = averageCenter;\n    }\n    set batchSizeIE(batchSizeIE) {\n        this._batchSizeIE = batchSizeIE;\n    }\n    set calculator(calculator) {\n        this._calculator = calculator;\n    }\n    set clusterClass(clusterClass) {\n        this._clusterClass = clusterClass;\n    }\n    set enableRetinaIcons(enableRetinaIcons) {\n        this._enableRetinaIcons = enableRetinaIcons;\n    }\n    set gridSize(gridSize) {\n        this._gridSize = gridSize;\n    }\n    set ignoreHidden(ignoreHidden) {\n        this._ignoreHidden = ignoreHidden;\n    }\n    set imageExtension(imageExtension) {\n        this._imageExtension = imageExtension;\n    }\n    set imagePath(imagePath) {\n        this._imagePath = imagePath;\n    }\n    set imageSizes(imageSizes) {\n        this._imageSizes = imageSizes;\n    }\n    set maxZoom(maxZoom) {\n        this._maxZoom = maxZoom;\n    }\n    set minimumClusterSize(minimumClusterSize) {\n        this._minimumClusterSize = minimumClusterSize;\n    }\n    set styles(styles) {\n        this._styles = styles;\n    }\n    set title(title) {\n        this._title = title;\n    }\n    set zIndex(zIndex) {\n        this._zIndex = zIndex;\n    }\n    set zoomOnClick(zoomOnClick) {\n        this._zoomOnClick = zoomOnClick;\n    }\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        if (this._canInitialize) {\n            if (typeof MarkerClusterer !== 'function' &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' +\n                    'Please install the MarkerClustererPlus library: ' +\n                    'https://github.com/googlemaps/js-markerclustererplus');\n            }\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap, [], this._combineOptions());\n            });\n            this._assertInitialized();\n            this._eventManager.setTarget(this.markerClusterer);\n        }\n    }\n    ngAfterContentInit() {\n        if (this._canInitialize) {\n            this._watchForMarkerChanges();\n        }\n    }\n    ngOnChanges(changes) {\n        const { markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles, _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath, _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick, } = this;\n        if (clusterer) {\n            if (changes['options']) {\n                clusterer.setOptions(this._combineOptions());\n            }\n            if (changes['ariaLabelFn']) {\n                clusterer.ariaLabelFn = ariaLabelFn;\n            }\n            if (changes['averageCenter'] && _averageCenter !== undefined) {\n                clusterer.setAverageCenter(_averageCenter);\n            }\n            if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n                clusterer.setBatchSizeIE(_batchSizeIE);\n            }\n            if (changes['calculator'] && !!_calculator) {\n                clusterer.setCalculator(_calculator);\n            }\n            if (changes['clusterClass'] && _clusterClass !== undefined) {\n                clusterer.setClusterClass(_clusterClass);\n            }\n            if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n                clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n            }\n            if (changes['gridSize'] && _gridSize !== undefined) {\n                clusterer.setGridSize(_gridSize);\n            }\n            if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n                clusterer.setIgnoreHidden(_ignoreHidden);\n            }\n            if (changes['imageExtension'] && _imageExtension !== undefined) {\n                clusterer.setImageExtension(_imageExtension);\n            }\n            if (changes['imagePath'] && _imagePath !== undefined) {\n                clusterer.setImagePath(_imagePath);\n            }\n            if (changes['imageSizes'] && _imageSizes) {\n                clusterer.setImageSizes(_imageSizes);\n            }\n            if (changes['maxZoom'] && _maxZoom !== undefined) {\n                clusterer.setMaxZoom(_maxZoom);\n            }\n            if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n                clusterer.setMinimumClusterSize(_minimumClusterSize);\n            }\n            if (changes['styles'] && _styles) {\n                clusterer.setStyles(_styles);\n            }\n            if (changes['title'] && _title !== undefined) {\n                clusterer.setTitle(_title);\n            }\n            if (changes['zIndex'] && _zIndex !== undefined) {\n                clusterer.setZIndex(_zIndex);\n            }\n            if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n                clusterer.setZoomOnClick(_zoomOnClick);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this._eventManager.destroy();\n        if (this.markerClusterer) {\n            this.markerClusterer.setMap(null);\n        }\n    }\n    fitMapToMarkers(padding) {\n        this._assertInitialized();\n        this.markerClusterer.fitMapToMarkers(padding);\n    }\n    getAverageCenter() {\n        this._assertInitialized();\n        return this.markerClusterer.getAverageCenter();\n    }\n    getBatchSizeIE() {\n        this._assertInitialized();\n        return this.markerClusterer.getBatchSizeIE();\n    }\n    getCalculator() {\n        this._assertInitialized();\n        return this.markerClusterer.getCalculator();\n    }\n    getClusterClass() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusterClass();\n    }\n    getClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusters();\n    }\n    getEnableRetinaIcons() {\n        this._assertInitialized();\n        return this.markerClusterer.getEnableRetinaIcons();\n    }\n    getGridSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getGridSize();\n    }\n    getIgnoreHidden() {\n        this._assertInitialized();\n        return this.markerClusterer.getIgnoreHidden();\n    }\n    getImageExtension() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageExtension();\n    }\n    getImagePath() {\n        this._assertInitialized();\n        return this.markerClusterer.getImagePath();\n    }\n    getImageSizes() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageSizes();\n    }\n    getMaxZoom() {\n        this._assertInitialized();\n        return this.markerClusterer.getMaxZoom();\n    }\n    getMinimumClusterSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getMinimumClusterSize();\n    }\n    getStyles() {\n        this._assertInitialized();\n        return this.markerClusterer.getStyles();\n    }\n    getTitle() {\n        this._assertInitialized();\n        return this.markerClusterer.getTitle();\n    }\n    getTotalClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalClusters();\n    }\n    getTotalMarkers() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalMarkers();\n    }\n    getZIndex() {\n        this._assertInitialized();\n        return this.markerClusterer.getZIndex();\n    }\n    getZoomOnClick() {\n        this._assertInitialized();\n        return this.markerClusterer.getZoomOnClick();\n    }\n    _combineOptions() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n        const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n        return Object.assign(Object.assign({}, options), { ariaLabelFn: (_a = this.ariaLabelFn) !== null && _a !== void 0 ? _a : options.ariaLabelFn, averageCenter: (_b = this._averageCenter) !== null && _b !== void 0 ? _b : options.averageCenter, batchSize: (_c = this.batchSize) !== null && _c !== void 0 ? _c : options.batchSize, batchSizeIE: (_d = this._batchSizeIE) !== null && _d !== void 0 ? _d : options.batchSizeIE, calculator: (_e = this._calculator) !== null && _e !== void 0 ? _e : options.calculator, clusterClass: (_f = this._clusterClass) !== null && _f !== void 0 ? _f : options.clusterClass, enableRetinaIcons: (_g = this._enableRetinaIcons) !== null && _g !== void 0 ? _g : options.enableRetinaIcons, gridSize: (_h = this._gridSize) !== null && _h !== void 0 ? _h : options.gridSize, ignoreHidden: (_j = this._ignoreHidden) !== null && _j !== void 0 ? _j : options.ignoreHidden, imageExtension: (_k = this._imageExtension) !== null && _k !== void 0 ? _k : options.imageExtension, imagePath: (_l = this._imagePath) !== null && _l !== void 0 ? _l : options.imagePath, imageSizes: (_m = this._imageSizes) !== null && _m !== void 0 ? _m : options.imageSizes, maxZoom: (_o = this._maxZoom) !== null && _o !== void 0 ? _o : options.maxZoom, minimumClusterSize: (_p = this._minimumClusterSize) !== null && _p !== void 0 ? _p : options.minimumClusterSize, styles: (_q = this._styles) !== null && _q !== void 0 ? _q : options.styles, title: (_r = this._title) !== null && _r !== void 0 ? _r : options.title, zIndex: (_s = this._zIndex) !== null && _s !== void 0 ? _s : options.zIndex, zoomOnClick: (_t = this._zoomOnClick) !== null && _t !== void 0 ? _t : options.zoomOnClick });\n    }\n    _watchForMarkerChanges() {\n        this._assertInitialized();\n        const initialMarkers = [];\n        for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n            this._currentMarkers.add(marker);\n            initialMarkers.push(marker);\n        }\n        this.markerClusterer.addMarkers(initialMarkers);\n        this._markers.changes\n            .pipe(takeUntil(this._destroy))\n            .subscribe((markerComponents) => {\n            this._assertInitialized();\n            const newMarkers = new Set(this._getInternalMarkers(markerComponents));\n            const markersToAdd = [];\n            const markersToRemove = [];\n            for (const marker of Array.from(newMarkers)) {\n                if (!this._currentMarkers.has(marker)) {\n                    this._currentMarkers.add(marker);\n                    markersToAdd.push(marker);\n                }\n            }\n            for (const marker of Array.from(this._currentMarkers)) {\n                if (!newMarkers.has(marker)) {\n                    markersToRemove.push(marker);\n                }\n            }\n            this.markerClusterer.addMarkers(markersToAdd, true);\n            this.markerClusterer.removeMarkers(markersToRemove, true);\n            this.markerClusterer.repaint();\n            for (const marker of markersToRemove) {\n                this._currentMarkers.delete(marker);\n            }\n        });\n    }\n    _getInternalMarkers(markers) {\n        return markers\n            .filter(markerComponent => !!markerComponent.marker)\n            .map(markerComponent => markerComponent.marker);\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.markerClusterer) {\n                throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' +\n                    'Please wait for the MarkerClusterer to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapMarkerClusterer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapMarkerClusterer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMapMarkerClusterer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapMarkerClusterer, selector: \"map-marker-clusterer\", inputs: { ariaLabelFn: \"ariaLabelFn\", averageCenter: \"averageCenter\", batchSize: \"batchSize\", batchSizeIE: \"batchSizeIE\", calculator: \"calculator\", clusterClass: \"clusterClass\", enableRetinaIcons: \"enableRetinaIcons\", gridSize: \"gridSize\", ignoreHidden: \"ignoreHidden\", imageExtension: \"imageExtension\", imagePath: \"imagePath\", imageSizes: \"imageSizes\", maxZoom: \"maxZoom\", minimumClusterSize: \"minimumClusterSize\", styles: \"styles\", title: \"title\", zIndex: \"zIndex\", zoomOnClick: \"zoomOnClick\", options: \"options\" }, outputs: { clusteringbegin: \"clusteringbegin\", clusteringend: \"clusteringend\", clusterClick: \"clusterClick\" }, queries: [{ propertyName: \"_markers\", predicate: MapMarker, descendants: true }], exportAs: [\"mapMarkerClusterer\"], usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapMarkerClusterer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'map-marker-clusterer',\n                    exportAs: 'mapMarkerClusterer',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { ariaLabelFn: [{\n                type: Input\n            }], averageCenter: [{\n                type: Input\n            }], batchSize: [{\n                type: Input\n            }], batchSizeIE: [{\n                type: Input\n            }], calculator: [{\n                type: Input\n            }], clusterClass: [{\n                type: Input\n            }], enableRetinaIcons: [{\n                type: Input\n            }], gridSize: [{\n                type: Input\n            }], ignoreHidden: [{\n                type: Input\n            }], imageExtension: [{\n                type: Input\n            }], imagePath: [{\n                type: Input\n            }], imageSizes: [{\n                type: Input\n            }], maxZoom: [{\n                type: Input\n            }], minimumClusterSize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], zoomOnClick: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], clusteringbegin: [{\n                type: Output\n            }], clusteringend: [{\n                type: Output\n            }], clusterClick: [{\n                type: Output\n            }], _markers: [{\n                type: ContentChildren,\n                args: [MapMarker, { descendants: true }]\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._paths = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n         */\n        this.polygonClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n         */\n        this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n         */\n        this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n         */\n        this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n         */\n        this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n         */\n        this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n         */\n        this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n         */\n        this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n         */\n        this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n         */\n        this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n         */\n        this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set paths(paths) {\n        this._paths.next(paths);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.polygon = new google.maps.Polygon(options);\n                });\n                this._assertInitialized();\n                this.polygon.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.polygon);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.polygon) {\n            this.polygon.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polygon.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polygon.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polygon.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n     */\n    getPaths() {\n        this._assertInitialized();\n        return this.polygon.getPaths();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polygon.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { paths: paths || options.paths });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polygon.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n            if (paths) {\n                this._assertInitialized();\n                this.polygon.setPaths(paths);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.polygon) {\n                throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                    'initialized. Please wait for the Polygon to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapPolygon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapPolygon, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapPolygon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapPolygon, selector: \"map-polygon\", inputs: { options: \"options\", paths: \"paths\" }, outputs: { polygonClick: \"polygonClick\", polygonDblclick: \"polygonDblclick\", polygonDrag: \"polygonDrag\", polygonDragend: \"polygonDragend\", polygonDragstart: \"polygonDragstart\", polygonMousedown: \"polygonMousedown\", polygonMousemove: \"polygonMousemove\", polygonMouseout: \"polygonMouseout\", polygonMouseover: \"polygonMouseover\", polygonMouseup: \"polygonMouseup\", polygonRightclick: \"polygonRightclick\" }, exportAs: [\"mapPolygon\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapPolygon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polygon',\n                    exportAs: 'mapPolygon',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], paths: [{\n                type: Input\n            }], polygonClick: [{\n                type: Output\n            }], polygonDblclick: [{\n                type: Output\n            }], polygonDrag: [{\n                type: Output\n            }], polygonDragend: [{\n                type: Output\n            }], polygonDragstart: [{\n                type: Output\n            }], polygonMousedown: [{\n                type: Output\n            }], polygonMousemove: [{\n                type: Output\n            }], polygonMouseout: [{\n                type: Output\n            }], polygonMouseover: [{\n                type: Output\n            }], polygonMouseup: [{\n                type: Output\n            }], polygonRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._path = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n         */\n        this.polylineClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n         */\n        this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n         */\n        this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n         */\n        this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n         */\n        this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n         */\n        this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n         */\n        this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n         */\n        this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n         */\n        this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n         */\n        this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n         */\n        this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set path(path) {\n        this._path.next(path);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => (this.polyline = new google.maps.Polyline(options)));\n                this._assertInitialized();\n                this.polyline.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.polyline);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.polyline) {\n            this.polyline.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polyline.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polyline.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polyline.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polyline.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { path: path || options.path });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polyline.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n            if (path) {\n                this._assertInitialized();\n                this.polyline.setPath(path);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.polyline) {\n                throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                    'initialized. Please wait for the Polyline to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapPolyline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapPolyline, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapPolyline.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapPolyline, selector: \"map-polyline\", inputs: { options: \"options\", path: \"path\" }, outputs: { polylineClick: \"polylineClick\", polylineDblclick: \"polylineDblclick\", polylineDrag: \"polylineDrag\", polylineDragend: \"polylineDragend\", polylineDragstart: \"polylineDragstart\", polylineMousedown: \"polylineMousedown\", polylineMousemove: \"polylineMousemove\", polylineMouseout: \"polylineMouseout\", polylineMouseover: \"polylineMouseover\", polylineMouseup: \"polylineMouseup\", polylineRightclick: \"polylineRightclick\" }, exportAs: [\"mapPolyline\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapPolyline, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polyline',\n                    exportAs: 'mapPolyline',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], polylineClick: [{\n                type: Output\n            }], polylineDblclick: [{\n                type: Output\n            }], polylineDrag: [{\n                type: Output\n            }], polylineDragend: [{\n                type: Output\n            }], polylineDragstart: [{\n                type: Output\n            }], polylineMousedown: [{\n                type: Output\n            }], polylineMousemove: [{\n                type: Output\n            }], polylineMouseout: [{\n                type: Output\n            }], polylineMouseover: [{\n                type: Output\n            }], polylineMouseup: [{\n                type: Output\n            }], polylineRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n         */ this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n         */\n        this.rectangleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n         */\n        this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n         */\n        this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n         */\n        this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n         */\n        this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n         */\n        this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n         */\n        this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n         */\n        this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n         */\n        this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n         */\n        this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n         */\n        this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.rectangle = new google.maps.Rectangle(options);\n                });\n                this._assertInitialized();\n                this.rectangle.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.rectangle);\n            });\n            this._watchForOptionsChanges();\n            this._watchForBoundsChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.rectangle) {\n            this.rectangle.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.rectangle.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.rectangle.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.rectangle.getEditable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.rectangle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { bounds: bounds || options.bounds });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.rectangle.setOptions(options);\n        });\n    }\n    _watchForBoundsChanges() {\n        this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n            if (bounds) {\n                this._assertInitialized();\n                this.rectangle.setBounds(bounds);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.rectangle) {\n                throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                    'Please wait for the Rectangle to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapRectangle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapRectangle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapRectangle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapRectangle, selector: \"map-rectangle\", inputs: { options: \"options\", bounds: \"bounds\" }, outputs: { boundsChanged: \"boundsChanged\", rectangleClick: \"rectangleClick\", rectangleDblclick: \"rectangleDblclick\", rectangleDrag: \"rectangleDrag\", rectangleDragend: \"rectangleDragend\", rectangleDragstart: \"rectangleDragstart\", rectangleMousedown: \"rectangleMousedown\", rectangleMousemove: \"rectangleMousemove\", rectangleMouseout: \"rectangleMouseout\", rectangleMouseover: \"rectangleMouseover\", rectangleMouseup: \"rectangleMouseup\", rectangleRightclick: \"rectangleRightclick\" }, exportAs: [\"mapRectangle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapRectangle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-rectangle',\n                    exportAs: 'mapRectangle',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], boundsChanged: [{\n                type: Output\n            }], rectangleClick: [{\n                type: Output\n            }], rectangleDblclick: [{\n                type: Output\n            }], rectangleDrag: [{\n                type: Output\n            }], rectangleDragend: [{\n                type: Output\n            }], rectangleDragstart: [{\n                type: Output\n            }], rectangleMousedown: [{\n                type: Output\n            }], rectangleMousemove: [{\n                type: Output\n            }], rectangleMouseout: [{\n                type: Output\n            }], rectangleMouseover: [{\n                type: Output\n            }], rectangleMouseup: [{\n                type: Output\n            }], rectangleRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._autoRefresh = new BehaviorSubject(true);\n        this._destroyed = new Subject();\n    }\n    /**\n     * Whether the traffic layer refreshes with updated information automatically.\n     */\n    set autoRefresh(autoRefresh) {\n        this._autoRefresh.next(autoRefresh);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                this._ngZone.runOutsideAngular(() => {\n                    this.trafficLayer = new google.maps.TrafficLayer(options);\n                });\n                this._assertInitialized();\n                this.trafficLayer.setMap(this._map.googleMap);\n            });\n            this._watchForAutoRefreshChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.trafficLayer) {\n            this.trafficLayer.setMap(null);\n        }\n    }\n    _combineOptions() {\n        return this._autoRefresh.pipe(map(autoRefresh => {\n            const combinedOptions = { autoRefresh };\n            return combinedOptions;\n        }));\n    }\n    _watchForAutoRefreshChanges() {\n        this._combineOptions()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(options => {\n            this._assertInitialized();\n            this.trafficLayer.setOptions(options);\n        });\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n        if (!this.trafficLayer) {\n            throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                'Please wait for the Traffic Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapTrafficLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapTrafficLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapTrafficLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapTrafficLayer, selector: \"map-traffic-layer\", inputs: { autoRefresh: \"autoRefresh\" }, exportAs: [\"mapTrafficLayer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapTrafficLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-traffic-layer',\n                    exportAs: 'mapTrafficLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { autoRefresh: [{\n                type: Input\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer extends MapBaseLayer {\n    _initializeObject() {\n        this.transitLayer = new google.maps.TransitLayer();\n    }\n    _setMap() {\n        this._assertLayerInitialized();\n        this.transitLayer.setMap(this._map.googleMap);\n    }\n    _unsetMap() {\n        if (this.transitLayer) {\n            this.transitLayer.setMap(null);\n        }\n    }\n    _assertLayerInitialized() {\n        if (!this.transitLayer) {\n            throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapTransitLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapTransitLayer, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMapTransitLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapTransitLayer, selector: \"map-transit-layer\", exportAs: [\"mapTransitLayer\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapTransitLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-transit-layer',\n                    exportAs: 'mapTransitLayer',\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * Data shown on the heatmap.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n     */\n    set data(data) {\n        this._data = data;\n    }\n    /**\n     * Options used to configure the heatmap. See:\n     * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        var _a, _b;\n        if (this._googleMap._isBrowser) {\n            if (!((_b = (_a = window.google) === null || _a === void 0 ? void 0 : _a.maps) === null || _b === void 0 ? void 0 : _b.visualization) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n                    'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n                    'https://developers.google.com/maps/documentation/javascript/visualization');\n            }\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.heatmap.setMap(this._googleMap.googleMap);\n        }\n    }\n    ngOnChanges(changes) {\n        const { _data, heatmap } = this;\n        if (heatmap) {\n            if (changes['options']) {\n                heatmap.setOptions(this._combineOptions());\n            }\n            if (changes['data'] && _data !== undefined) {\n                heatmap.setData(this._normalizeData(_data));\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.heatmap) {\n            this.heatmap.setMap(null);\n        }\n    }\n    /**\n     * Gets the data that is currently shown on the heatmap.\n     * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n     */\n    getData() {\n        this._assertInitialized();\n        return this.heatmap.getData();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || {};\n        return Object.assign(Object.assign({}, options), { data: this._normalizeData(this._data || options.data || []), map: this._googleMap.googleMap });\n    }\n    /**\n     * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n     * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n     * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n     * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n     * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n     * convert it to a `LatLng` object before passing it off to Google Maps.\n     */\n    _normalizeData(data) {\n        const result = [];\n        data.forEach(item => {\n            result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n        });\n        return result;\n    }\n    /** Asserts that the heatmap object has been initialized. */\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.heatmap) {\n                throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' +\n                    'initialized. Please wait for the heatmap to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapHeatmapLayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapHeatmapLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nMapHeatmapLayer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MapHeatmapLayer, selector: \"map-heatmap-layer\", inputs: { data: \"data\", options: \"options\" }, exportAs: [\"mapHeatmapLayer\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapHeatmapLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-heatmap-layer',\n                    exportAs: 'mapHeatmapLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { data: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }] } });\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n    return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst COMPONENTS = [\n    GoogleMap,\n    MapBaseLayer,\n    MapBicyclingLayer,\n    MapCircle,\n    MapDirectionsRenderer,\n    MapGroundOverlay,\n    MapInfoWindow,\n    MapKmlLayer,\n    MapMarker,\n    MapMarkerClusterer,\n    MapPolygon,\n    MapPolyline,\n    MapRectangle,\n    MapTrafficLayer,\n    MapTransitLayer,\n    MapHeatmapLayer,\n];\nclass GoogleMapsModule {\n}\nGoogleMapsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: GoogleMapsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGoogleMapsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: GoogleMapsModule, declarations: [GoogleMap,\n        MapBaseLayer,\n        MapBicyclingLayer,\n        MapCircle,\n        MapDirectionsRenderer,\n        MapGroundOverlay,\n        MapInfoWindow,\n        MapKmlLayer,\n        MapMarker,\n        MapMarkerClusterer,\n        MapPolygon,\n        MapPolyline,\n        MapRectangle,\n        MapTrafficLayer,\n        MapTransitLayer,\n        MapHeatmapLayer], exports: [GoogleMap,\n        MapBaseLayer,\n        MapBicyclingLayer,\n        MapCircle,\n        MapDirectionsRenderer,\n        MapGroundOverlay,\n        MapInfoWindow,\n        MapKmlLayer,\n        MapMarker,\n        MapMarkerClusterer,\n        MapPolygon,\n        MapPolyline,\n        MapRectangle,\n        MapTrafficLayer,\n        MapTransitLayer,\n        MapHeatmapLayer] });\nGoogleMapsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: GoogleMapsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: GoogleMapsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: COMPONENTS,\n                    exports: COMPONENTS,\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsService.route\n     */\n    route(request) {\n        return new Observable(observer => {\n            // Initialize the `DirectionsService` lazily since the Google Maps API may\n            // not have been loaded when the provider is instantiated.\n            if (!this._directionsService) {\n                this._directionsService = new google.maps.DirectionsService();\n            }\n            this._directionsService.route(request, (result, status) => {\n                this._ngZone.run(() => {\n                    observer.next({ result: result || undefined, status });\n                    observer.complete();\n                });\n            });\n        });\n    }\n}\nMapDirectionsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapDirectionsService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nMapDirectionsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapDirectionsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapDirectionsService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n     */\n    geocode(request) {\n        return new Observable(observer => {\n            // Initialize the `Geocoder` lazily since the Google Maps API may\n            // not have been loaded when the provider is instantiated.\n            if (!this._geocoder) {\n                this._geocoder = new google.maps.Geocoder();\n            }\n            this._geocoder.geocode(request, (results, status) => {\n                this._ngZone.run(() => {\n                    observer.next({ results: results || [], status });\n                    observer.complete();\n                });\n            });\n        });\n    }\n}\nMapGeocoder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapGeocoder, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nMapGeocoder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapGeocoder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MapGeocoder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}